//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.18444
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace GeoDo.RSS.UI.AddIn.HdService.HdDataServer {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="ArrayOfString", Namespace="http://dataserver.service.webservice.hdht.org", ItemName="string")]
    [System.SerializableAttribute()]
    public class ArrayOfString : System.Collections.Generic.List<string> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="ArrayOfAnyType", Namespace="http://www.w3.org/2001/XMLSchema", ItemName="anyType")]
    [System.SerializableAttribute()]
    public class ArrayOfAnyType : System.Collections.Generic.List<object> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Extent", Namespace="http://dataserver.service.webservice.hdht.org")]
    [System.SerializableAttribute()]
    public partial class Extent : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double xmaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double xminField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double ymaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double yminField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double xmax {
            get {
                return this.xmaxField;
            }
            set {
                if ((this.xmaxField.Equals(value) != true)) {
                    this.xmaxField = value;
                    this.RaisePropertyChanged("xmax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double xmin {
            get {
                return this.xminField;
            }
            set {
                if ((this.xminField.Equals(value) != true)) {
                    this.xminField = value;
                    this.RaisePropertyChanged("xmin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double ymax {
            get {
                return this.ymaxField;
            }
            set {
                if ((this.ymaxField.Equals(value) != true)) {
                    this.ymaxField = value;
                    this.RaisePropertyChanged("ymax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double ymin {
            get {
                return this.yminField;
            }
            set {
                if ((this.yminField.Equals(value) != true)) {
                    this.yminField = value;
                    this.RaisePropertyChanged("ymin");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MosaicInfo", Namespace="http://beans.mosaic.geodo.business.hdht.org")]
    [System.SerializableAttribute()]
    public partial class MosaicInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime createTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> dataTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string datalevelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string datapathField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string dayOrNightField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string envnameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string extendfilesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long fileSizeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int isDeleteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> maxxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> maxyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string messageinfoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string messagetypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> minxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> minyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string observationdateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string orbitIdentifyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string projectionIdentifyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string projectionIdsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float resolutionxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float resolutionyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string satelliteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GeoDo.RSS.UI.AddIn.HdService.HdDataServer.Scheduler schedulerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string sensorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string stationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string taskTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string thumbnailField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime createTime {
            get {
                return this.createTimeField;
            }
            set {
                if ((this.createTimeField.Equals(value) != true)) {
                    this.createTimeField = value;
                    this.RaisePropertyChanged("createTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> dataType {
            get {
                return this.dataTypeField;
            }
            set {
                if ((this.dataTypeField.Equals(value) != true)) {
                    this.dataTypeField = value;
                    this.RaisePropertyChanged("dataType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string datalevel {
            get {
                return this.datalevelField;
            }
            set {
                if ((object.ReferenceEquals(this.datalevelField, value) != true)) {
                    this.datalevelField = value;
                    this.RaisePropertyChanged("datalevel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string datapath {
            get {
                return this.datapathField;
            }
            set {
                if ((object.ReferenceEquals(this.datapathField, value) != true)) {
                    this.datapathField = value;
                    this.RaisePropertyChanged("datapath");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string dayOrNight {
            get {
                return this.dayOrNightField;
            }
            set {
                if ((object.ReferenceEquals(this.dayOrNightField, value) != true)) {
                    this.dayOrNightField = value;
                    this.RaisePropertyChanged("dayOrNight");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string envname {
            get {
                return this.envnameField;
            }
            set {
                if ((object.ReferenceEquals(this.envnameField, value) != true)) {
                    this.envnameField = value;
                    this.RaisePropertyChanged("envname");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string extendfiles {
            get {
                return this.extendfilesField;
            }
            set {
                if ((object.ReferenceEquals(this.extendfilesField, value) != true)) {
                    this.extendfilesField = value;
                    this.RaisePropertyChanged("extendfiles");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long fileSize {
            get {
                return this.fileSizeField;
            }
            set {
                if ((this.fileSizeField.Equals(value) != true)) {
                    this.fileSizeField = value;
                    this.RaisePropertyChanged("fileSize");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string id {
            get {
                return this.idField;
            }
            set {
                if ((object.ReferenceEquals(this.idField, value) != true)) {
                    this.idField = value;
                    this.RaisePropertyChanged("id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int isDelete {
            get {
                return this.isDeleteField;
            }
            set {
                if ((this.isDeleteField.Equals(value) != true)) {
                    this.isDeleteField = value;
                    this.RaisePropertyChanged("isDelete");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> maxx {
            get {
                return this.maxxField;
            }
            set {
                if ((this.maxxField.Equals(value) != true)) {
                    this.maxxField = value;
                    this.RaisePropertyChanged("maxx");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> maxy {
            get {
                return this.maxyField;
            }
            set {
                if ((this.maxyField.Equals(value) != true)) {
                    this.maxyField = value;
                    this.RaisePropertyChanged("maxy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string messageinfo {
            get {
                return this.messageinfoField;
            }
            set {
                if ((object.ReferenceEquals(this.messageinfoField, value) != true)) {
                    this.messageinfoField = value;
                    this.RaisePropertyChanged("messageinfo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string messagetype {
            get {
                return this.messagetypeField;
            }
            set {
                if ((object.ReferenceEquals(this.messagetypeField, value) != true)) {
                    this.messagetypeField = value;
                    this.RaisePropertyChanged("messagetype");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> minx {
            get {
                return this.minxField;
            }
            set {
                if ((this.minxField.Equals(value) != true)) {
                    this.minxField = value;
                    this.RaisePropertyChanged("minx");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> miny {
            get {
                return this.minyField;
            }
            set {
                if ((this.minyField.Equals(value) != true)) {
                    this.minyField = value;
                    this.RaisePropertyChanged("miny");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string observationdate {
            get {
                return this.observationdateField;
            }
            set {
                if ((object.ReferenceEquals(this.observationdateField, value) != true)) {
                    this.observationdateField = value;
                    this.RaisePropertyChanged("observationdate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string orbitIdentify {
            get {
                return this.orbitIdentifyField;
            }
            set {
                if ((object.ReferenceEquals(this.orbitIdentifyField, value) != true)) {
                    this.orbitIdentifyField = value;
                    this.RaisePropertyChanged("orbitIdentify");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string projectionIdentify {
            get {
                return this.projectionIdentifyField;
            }
            set {
                if ((object.ReferenceEquals(this.projectionIdentifyField, value) != true)) {
                    this.projectionIdentifyField = value;
                    this.RaisePropertyChanged("projectionIdentify");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string projectionIds {
            get {
                return this.projectionIdsField;
            }
            set {
                if ((object.ReferenceEquals(this.projectionIdsField, value) != true)) {
                    this.projectionIdsField = value;
                    this.RaisePropertyChanged("projectionIds");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float resolutionx {
            get {
                return this.resolutionxField;
            }
            set {
                if ((this.resolutionxField.Equals(value) != true)) {
                    this.resolutionxField = value;
                    this.RaisePropertyChanged("resolutionx");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float resolutiony {
            get {
                return this.resolutionyField;
            }
            set {
                if ((this.resolutionyField.Equals(value) != true)) {
                    this.resolutionyField = value;
                    this.RaisePropertyChanged("resolutiony");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string satellite {
            get {
                return this.satelliteField;
            }
            set {
                if ((object.ReferenceEquals(this.satelliteField, value) != true)) {
                    this.satelliteField = value;
                    this.RaisePropertyChanged("satellite");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GeoDo.RSS.UI.AddIn.HdService.HdDataServer.Scheduler scheduler {
            get {
                return this.schedulerField;
            }
            set {
                if ((object.ReferenceEquals(this.schedulerField, value) != true)) {
                    this.schedulerField = value;
                    this.RaisePropertyChanged("scheduler");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string sensor {
            get {
                return this.sensorField;
            }
            set {
                if ((object.ReferenceEquals(this.sensorField, value) != true)) {
                    this.sensorField = value;
                    this.RaisePropertyChanged("sensor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string station {
            get {
                return this.stationField;
            }
            set {
                if ((object.ReferenceEquals(this.stationField, value) != true)) {
                    this.stationField = value;
                    this.RaisePropertyChanged("station");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string taskType {
            get {
                return this.taskTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.taskTypeField, value) != true)) {
                    this.taskTypeField = value;
                    this.RaisePropertyChanged("taskType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string thumbnail {
            get {
                return this.thumbnailField;
            }
            set {
                if ((object.ReferenceEquals(this.thumbnailField, value) != true)) {
                    this.thumbnailField = value;
                    this.RaisePropertyChanged("thumbnail");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Scheduler", Namespace="http://bean.scheduler.business.hdht.org")]
    [System.SerializableAttribute()]
    public partial class Scheduler : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GeoDo.RSS.UI.AddIn.HdService.HdDataServer.ArrayOfString SSRField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string componentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string createByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime createTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime currDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string metaDateTypesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime nextDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string notesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GeoDo.RSS.UI.AddIn.HdService.HdDataServer.ParameterBean[] parametersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string periodField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string periodReadmeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string schedulerNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string schedulerTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string suffixNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GeoDo.RSS.UI.AddIn.HdService.HdDataServer.SupportDataCatalog supportDataCatalogField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string updateByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime updateTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ztField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GeoDo.RSS.UI.AddIn.HdService.HdDataServer.ArrayOfString SSR {
            get {
                return this.SSRField;
            }
            set {
                if ((object.ReferenceEquals(this.SSRField, value) != true)) {
                    this.SSRField = value;
                    this.RaisePropertyChanged("SSR");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string component {
            get {
                return this.componentField;
            }
            set {
                if ((object.ReferenceEquals(this.componentField, value) != true)) {
                    this.componentField = value;
                    this.RaisePropertyChanged("component");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string createBy {
            get {
                return this.createByField;
            }
            set {
                if ((object.ReferenceEquals(this.createByField, value) != true)) {
                    this.createByField = value;
                    this.RaisePropertyChanged("createBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime createTime {
            get {
                return this.createTimeField;
            }
            set {
                if ((this.createTimeField.Equals(value) != true)) {
                    this.createTimeField = value;
                    this.RaisePropertyChanged("createTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime currDate {
            get {
                return this.currDateField;
            }
            set {
                if ((this.currDateField.Equals(value) != true)) {
                    this.currDateField = value;
                    this.RaisePropertyChanged("currDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string id {
            get {
                return this.idField;
            }
            set {
                if ((object.ReferenceEquals(this.idField, value) != true)) {
                    this.idField = value;
                    this.RaisePropertyChanged("id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string metaDateTypes {
            get {
                return this.metaDateTypesField;
            }
            set {
                if ((object.ReferenceEquals(this.metaDateTypesField, value) != true)) {
                    this.metaDateTypesField = value;
                    this.RaisePropertyChanged("metaDateTypes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime nextDate {
            get {
                return this.nextDateField;
            }
            set {
                if ((this.nextDateField.Equals(value) != true)) {
                    this.nextDateField = value;
                    this.RaisePropertyChanged("nextDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string notes {
            get {
                return this.notesField;
            }
            set {
                if ((object.ReferenceEquals(this.notesField, value) != true)) {
                    this.notesField = value;
                    this.RaisePropertyChanged("notes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GeoDo.RSS.UI.AddIn.HdService.HdDataServer.ParameterBean[] parameters {
            get {
                return this.parametersField;
            }
            set {
                if ((object.ReferenceEquals(this.parametersField, value) != true)) {
                    this.parametersField = value;
                    this.RaisePropertyChanged("parameters");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string period {
            get {
                return this.periodField;
            }
            set {
                if ((object.ReferenceEquals(this.periodField, value) != true)) {
                    this.periodField = value;
                    this.RaisePropertyChanged("period");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string periodReadme {
            get {
                return this.periodReadmeField;
            }
            set {
                if ((object.ReferenceEquals(this.periodReadmeField, value) != true)) {
                    this.periodReadmeField = value;
                    this.RaisePropertyChanged("periodReadme");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string schedulerName {
            get {
                return this.schedulerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.schedulerNameField, value) != true)) {
                    this.schedulerNameField = value;
                    this.RaisePropertyChanged("schedulerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string schedulerType {
            get {
                return this.schedulerTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.schedulerTypeField, value) != true)) {
                    this.schedulerTypeField = value;
                    this.RaisePropertyChanged("schedulerType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string suffixName {
            get {
                return this.suffixNameField;
            }
            set {
                if ((object.ReferenceEquals(this.suffixNameField, value) != true)) {
                    this.suffixNameField = value;
                    this.RaisePropertyChanged("suffixName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GeoDo.RSS.UI.AddIn.HdService.HdDataServer.SupportDataCatalog supportDataCatalog {
            get {
                return this.supportDataCatalogField;
            }
            set {
                if ((object.ReferenceEquals(this.supportDataCatalogField, value) != true)) {
                    this.supportDataCatalogField = value;
                    this.RaisePropertyChanged("supportDataCatalog");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string updateBy {
            get {
                return this.updateByField;
            }
            set {
                if ((object.ReferenceEquals(this.updateByField, value) != true)) {
                    this.updateByField = value;
                    this.RaisePropertyChanged("updateBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime updateTime {
            get {
                return this.updateTimeField;
            }
            set {
                if ((this.updateTimeField.Equals(value) != true)) {
                    this.updateTimeField = value;
                    this.RaisePropertyChanged("updateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int zt {
            get {
                return this.ztField;
            }
            set {
                if ((this.ztField.Equals(value) != true)) {
                    this.ztField = value;
                    this.RaisePropertyChanged("zt");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SupportDataCatalog", Namespace="http://bean.catalog.supportData.business.hdht.org")]
    [System.SerializableAttribute()]
    public partial class SupportDataCatalog : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GeoDo.RSS.UI.AddIn.HdService.HdDataServer.SupportDataCatalog[] childsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string createByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime createTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string managePageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string nameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string notesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GeoDo.RSS.UI.AddIn.HdService.HdDataServer.SupportDataCatalog parentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string schedulerStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> statusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string updateByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime updateTimeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GeoDo.RSS.UI.AddIn.HdService.HdDataServer.SupportDataCatalog[] childs {
            get {
                return this.childsField;
            }
            set {
                if ((object.ReferenceEquals(this.childsField, value) != true)) {
                    this.childsField = value;
                    this.RaisePropertyChanged("childs");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string createBy {
            get {
                return this.createByField;
            }
            set {
                if ((object.ReferenceEquals(this.createByField, value) != true)) {
                    this.createByField = value;
                    this.RaisePropertyChanged("createBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime createTime {
            get {
                return this.createTimeField;
            }
            set {
                if ((this.createTimeField.Equals(value) != true)) {
                    this.createTimeField = value;
                    this.RaisePropertyChanged("createTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string id {
            get {
                return this.idField;
            }
            set {
                if ((object.ReferenceEquals(this.idField, value) != true)) {
                    this.idField = value;
                    this.RaisePropertyChanged("id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string managePage {
            get {
                return this.managePageField;
            }
            set {
                if ((object.ReferenceEquals(this.managePageField, value) != true)) {
                    this.managePageField = value;
                    this.RaisePropertyChanged("managePage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                if ((object.ReferenceEquals(this.nameField, value) != true)) {
                    this.nameField = value;
                    this.RaisePropertyChanged("name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string notes {
            get {
                return this.notesField;
            }
            set {
                if ((object.ReferenceEquals(this.notesField, value) != true)) {
                    this.notesField = value;
                    this.RaisePropertyChanged("notes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GeoDo.RSS.UI.AddIn.HdService.HdDataServer.SupportDataCatalog parent {
            get {
                return this.parentField;
            }
            set {
                if ((object.ReferenceEquals(this.parentField, value) != true)) {
                    this.parentField = value;
                    this.RaisePropertyChanged("parent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string schedulerStatus {
            get {
                return this.schedulerStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.schedulerStatusField, value) != true)) {
                    this.schedulerStatusField = value;
                    this.RaisePropertyChanged("schedulerStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> status {
            get {
                return this.statusField;
            }
            set {
                if ((this.statusField.Equals(value) != true)) {
                    this.statusField = value;
                    this.RaisePropertyChanged("status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string updateBy {
            get {
                return this.updateByField;
            }
            set {
                if ((object.ReferenceEquals(this.updateByField, value) != true)) {
                    this.updateByField = value;
                    this.RaisePropertyChanged("updateBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime updateTime {
            get {
                return this.updateTimeField;
            }
            set {
                if ((this.updateTimeField.Equals(value) != true)) {
                    this.updateTimeField = value;
                    this.RaisePropertyChanged("updateTime");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ParameterBean", Namespace="http://bean.scheduler.business.hdht.org")]
    [System.SerializableAttribute()]
    public partial class ParameterBean : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GeoDo.RSS.UI.AddIn.HdService.HdDataServer.ParameterBean[] listField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string nameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string valueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string id {
            get {
                return this.idField;
            }
            set {
                if ((object.ReferenceEquals(this.idField, value) != true)) {
                    this.idField = value;
                    this.RaisePropertyChanged("id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GeoDo.RSS.UI.AddIn.HdService.HdDataServer.ParameterBean[] list {
            get {
                return this.listField;
            }
            set {
                if ((object.ReferenceEquals(this.listField, value) != true)) {
                    this.listField = value;
                    this.RaisePropertyChanged("list");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                if ((object.ReferenceEquals(this.nameField, value) != true)) {
                    this.nameField = value;
                    this.RaisePropertyChanged("name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string value {
            get {
                return this.valueField;
            }
            set {
                if ((object.ReferenceEquals(this.valueField, value) != true)) {
                    this.valueField = value;
                    this.RaisePropertyChanged("value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProjectionInfo", Namespace="http://bean.projection.geodo.business.hdht.org")]
    [System.SerializableAttribute()]
    public partial class ProjectionInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime createTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GeoDo.RSS.UI.AddIn.HdService.HdDataServer.File dataFileField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string datapathField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string extendfilesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long fileSizeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int isDeleteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> maxxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> maxyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string messageinfoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string messagetypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> minxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> minyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GeoDo.RSS.UI.AddIn.HdService.HdDataServer.MosaicInfo mosaicInfoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GeoDo.RSS.UI.AddIn.HdService.HdDataServer.OrbitInfo orbitInfoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string projectionIdentifyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float resolutionxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float resolutionyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GeoDo.RSS.UI.AddIn.HdService.HdDataServer.Scheduler schedulerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string taskTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string thumbnailField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime createTime {
            get {
                return this.createTimeField;
            }
            set {
                if ((this.createTimeField.Equals(value) != true)) {
                    this.createTimeField = value;
                    this.RaisePropertyChanged("createTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GeoDo.RSS.UI.AddIn.HdService.HdDataServer.File dataFile {
            get {
                return this.dataFileField;
            }
            set {
                if ((object.ReferenceEquals(this.dataFileField, value) != true)) {
                    this.dataFileField = value;
                    this.RaisePropertyChanged("dataFile");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string datapath {
            get {
                return this.datapathField;
            }
            set {
                if ((object.ReferenceEquals(this.datapathField, value) != true)) {
                    this.datapathField = value;
                    this.RaisePropertyChanged("datapath");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string extendfiles {
            get {
                return this.extendfilesField;
            }
            set {
                if ((object.ReferenceEquals(this.extendfilesField, value) != true)) {
                    this.extendfilesField = value;
                    this.RaisePropertyChanged("extendfiles");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long fileSize {
            get {
                return this.fileSizeField;
            }
            set {
                if ((this.fileSizeField.Equals(value) != true)) {
                    this.fileSizeField = value;
                    this.RaisePropertyChanged("fileSize");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string id {
            get {
                return this.idField;
            }
            set {
                if ((object.ReferenceEquals(this.idField, value) != true)) {
                    this.idField = value;
                    this.RaisePropertyChanged("id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int isDelete {
            get {
                return this.isDeleteField;
            }
            set {
                if ((this.isDeleteField.Equals(value) != true)) {
                    this.isDeleteField = value;
                    this.RaisePropertyChanged("isDelete");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> maxx {
            get {
                return this.maxxField;
            }
            set {
                if ((this.maxxField.Equals(value) != true)) {
                    this.maxxField = value;
                    this.RaisePropertyChanged("maxx");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> maxy {
            get {
                return this.maxyField;
            }
            set {
                if ((this.maxyField.Equals(value) != true)) {
                    this.maxyField = value;
                    this.RaisePropertyChanged("maxy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string messageinfo {
            get {
                return this.messageinfoField;
            }
            set {
                if ((object.ReferenceEquals(this.messageinfoField, value) != true)) {
                    this.messageinfoField = value;
                    this.RaisePropertyChanged("messageinfo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string messagetype {
            get {
                return this.messagetypeField;
            }
            set {
                if ((object.ReferenceEquals(this.messagetypeField, value) != true)) {
                    this.messagetypeField = value;
                    this.RaisePropertyChanged("messagetype");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> minx {
            get {
                return this.minxField;
            }
            set {
                if ((this.minxField.Equals(value) != true)) {
                    this.minxField = value;
                    this.RaisePropertyChanged("minx");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> miny {
            get {
                return this.minyField;
            }
            set {
                if ((this.minyField.Equals(value) != true)) {
                    this.minyField = value;
                    this.RaisePropertyChanged("miny");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GeoDo.RSS.UI.AddIn.HdService.HdDataServer.MosaicInfo mosaicInfo {
            get {
                return this.mosaicInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.mosaicInfoField, value) != true)) {
                    this.mosaicInfoField = value;
                    this.RaisePropertyChanged("mosaicInfo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GeoDo.RSS.UI.AddIn.HdService.HdDataServer.OrbitInfo orbitInfo {
            get {
                return this.orbitInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.orbitInfoField, value) != true)) {
                    this.orbitInfoField = value;
                    this.RaisePropertyChanged("orbitInfo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string projectionIdentify {
            get {
                return this.projectionIdentifyField;
            }
            set {
                if ((object.ReferenceEquals(this.projectionIdentifyField, value) != true)) {
                    this.projectionIdentifyField = value;
                    this.RaisePropertyChanged("projectionIdentify");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float resolutionx {
            get {
                return this.resolutionxField;
            }
            set {
                if ((this.resolutionxField.Equals(value) != true)) {
                    this.resolutionxField = value;
                    this.RaisePropertyChanged("resolutionx");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float resolutiony {
            get {
                return this.resolutionyField;
            }
            set {
                if ((this.resolutionyField.Equals(value) != true)) {
                    this.resolutionyField = value;
                    this.RaisePropertyChanged("resolutiony");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GeoDo.RSS.UI.AddIn.HdService.HdDataServer.Scheduler scheduler {
            get {
                return this.schedulerField;
            }
            set {
                if ((object.ReferenceEquals(this.schedulerField, value) != true)) {
                    this.schedulerField = value;
                    this.RaisePropertyChanged("scheduler");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string taskType {
            get {
                return this.taskTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.taskTypeField, value) != true)) {
                    this.taskTypeField = value;
                    this.RaisePropertyChanged("taskType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string thumbnail {
            get {
                return this.thumbnailField;
            }
            set {
                if ((object.ReferenceEquals(this.thumbnailField, value) != true)) {
                    this.thumbnailField = value;
                    this.RaisePropertyChanged("thumbnail");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="File", Namespace="http://io.java")]
    [System.SerializableAttribute()]
    public partial class File : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool absoluteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GeoDo.RSS.UI.AddIn.HdService.HdDataServer.File absoluteFileField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string absolutePathField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GeoDo.RSS.UI.AddIn.HdService.HdDataServer.File canonicalFileField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string canonicalPathField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool directoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool fileField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long freeSpaceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool hiddenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string nameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string parentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GeoDo.RSS.UI.AddIn.HdService.HdDataServer.File parentFileField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string pathField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long totalSpaceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long usableSpaceField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool absolute {
            get {
                return this.absoluteField;
            }
            set {
                if ((this.absoluteField.Equals(value) != true)) {
                    this.absoluteField = value;
                    this.RaisePropertyChanged("absolute");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GeoDo.RSS.UI.AddIn.HdService.HdDataServer.File absoluteFile {
            get {
                return this.absoluteFileField;
            }
            set {
                if ((object.ReferenceEquals(this.absoluteFileField, value) != true)) {
                    this.absoluteFileField = value;
                    this.RaisePropertyChanged("absoluteFile");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string absolutePath {
            get {
                return this.absolutePathField;
            }
            set {
                if ((object.ReferenceEquals(this.absolutePathField, value) != true)) {
                    this.absolutePathField = value;
                    this.RaisePropertyChanged("absolutePath");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GeoDo.RSS.UI.AddIn.HdService.HdDataServer.File canonicalFile {
            get {
                return this.canonicalFileField;
            }
            set {
                if ((object.ReferenceEquals(this.canonicalFileField, value) != true)) {
                    this.canonicalFileField = value;
                    this.RaisePropertyChanged("canonicalFile");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string canonicalPath {
            get {
                return this.canonicalPathField;
            }
            set {
                if ((object.ReferenceEquals(this.canonicalPathField, value) != true)) {
                    this.canonicalPathField = value;
                    this.RaisePropertyChanged("canonicalPath");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool directory {
            get {
                return this.directoryField;
            }
            set {
                if ((this.directoryField.Equals(value) != true)) {
                    this.directoryField = value;
                    this.RaisePropertyChanged("directory");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool file {
            get {
                return this.fileField;
            }
            set {
                if ((this.fileField.Equals(value) != true)) {
                    this.fileField = value;
                    this.RaisePropertyChanged("file");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long freeSpace {
            get {
                return this.freeSpaceField;
            }
            set {
                if ((this.freeSpaceField.Equals(value) != true)) {
                    this.freeSpaceField = value;
                    this.RaisePropertyChanged("freeSpace");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool hidden {
            get {
                return this.hiddenField;
            }
            set {
                if ((this.hiddenField.Equals(value) != true)) {
                    this.hiddenField = value;
                    this.RaisePropertyChanged("hidden");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                if ((object.ReferenceEquals(this.nameField, value) != true)) {
                    this.nameField = value;
                    this.RaisePropertyChanged("name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string parent {
            get {
                return this.parentField;
            }
            set {
                if ((object.ReferenceEquals(this.parentField, value) != true)) {
                    this.parentField = value;
                    this.RaisePropertyChanged("parent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GeoDo.RSS.UI.AddIn.HdService.HdDataServer.File parentFile {
            get {
                return this.parentFileField;
            }
            set {
                if ((object.ReferenceEquals(this.parentFileField, value) != true)) {
                    this.parentFileField = value;
                    this.RaisePropertyChanged("parentFile");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string path {
            get {
                return this.pathField;
            }
            set {
                if ((object.ReferenceEquals(this.pathField, value) != true)) {
                    this.pathField = value;
                    this.RaisePropertyChanged("path");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long totalSpace {
            get {
                return this.totalSpaceField;
            }
            set {
                if ((this.totalSpaceField.Equals(value) != true)) {
                    this.totalSpaceField = value;
                    this.RaisePropertyChanged("totalSpace");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long usableSpace {
            get {
                return this.usableSpaceField;
            }
            set {
                if ((this.usableSpaceField.Equals(value) != true)) {
                    this.usableSpaceField = value;
                    this.RaisePropertyChanged("usableSpace");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OrbitInfo", Namespace="http://bean.orbit.geodo.business.hdht.org")]
    [System.SerializableAttribute()]
    public partial class OrbitInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string bzField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime createTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string datalevelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string dayOrNightField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> fileSizeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> isDeleteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> lastModifiedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string observationdateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string observationtimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string orbitIdentifyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string pathField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GeoDo.RSS.UI.AddIn.HdService.HdDataServer.ProjectionInfo projectionInfoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<float> resolutionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string satelliteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string sensorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string stationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string taskTypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string bz {
            get {
                return this.bzField;
            }
            set {
                if ((object.ReferenceEquals(this.bzField, value) != true)) {
                    this.bzField = value;
                    this.RaisePropertyChanged("bz");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime createTime {
            get {
                return this.createTimeField;
            }
            set {
                if ((this.createTimeField.Equals(value) != true)) {
                    this.createTimeField = value;
                    this.RaisePropertyChanged("createTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string datalevel {
            get {
                return this.datalevelField;
            }
            set {
                if ((object.ReferenceEquals(this.datalevelField, value) != true)) {
                    this.datalevelField = value;
                    this.RaisePropertyChanged("datalevel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string dayOrNight {
            get {
                return this.dayOrNightField;
            }
            set {
                if ((object.ReferenceEquals(this.dayOrNightField, value) != true)) {
                    this.dayOrNightField = value;
                    this.RaisePropertyChanged("dayOrNight");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> fileSize {
            get {
                return this.fileSizeField;
            }
            set {
                if ((this.fileSizeField.Equals(value) != true)) {
                    this.fileSizeField = value;
                    this.RaisePropertyChanged("fileSize");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string id {
            get {
                return this.idField;
            }
            set {
                if ((object.ReferenceEquals(this.idField, value) != true)) {
                    this.idField = value;
                    this.RaisePropertyChanged("id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> isDelete {
            get {
                return this.isDeleteField;
            }
            set {
                if ((this.isDeleteField.Equals(value) != true)) {
                    this.isDeleteField = value;
                    this.RaisePropertyChanged("isDelete");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> lastModified {
            get {
                return this.lastModifiedField;
            }
            set {
                if ((this.lastModifiedField.Equals(value) != true)) {
                    this.lastModifiedField = value;
                    this.RaisePropertyChanged("lastModified");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string observationdate {
            get {
                return this.observationdateField;
            }
            set {
                if ((object.ReferenceEquals(this.observationdateField, value) != true)) {
                    this.observationdateField = value;
                    this.RaisePropertyChanged("observationdate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string observationtime {
            get {
                return this.observationtimeField;
            }
            set {
                if ((object.ReferenceEquals(this.observationtimeField, value) != true)) {
                    this.observationtimeField = value;
                    this.RaisePropertyChanged("observationtime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string orbitIdentify {
            get {
                return this.orbitIdentifyField;
            }
            set {
                if ((object.ReferenceEquals(this.orbitIdentifyField, value) != true)) {
                    this.orbitIdentifyField = value;
                    this.RaisePropertyChanged("orbitIdentify");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string path {
            get {
                return this.pathField;
            }
            set {
                if ((object.ReferenceEquals(this.pathField, value) != true)) {
                    this.pathField = value;
                    this.RaisePropertyChanged("path");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GeoDo.RSS.UI.AddIn.HdService.HdDataServer.ProjectionInfo projectionInfo {
            get {
                return this.projectionInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.projectionInfoField, value) != true)) {
                    this.projectionInfoField = value;
                    this.RaisePropertyChanged("projectionInfo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<float> resolution {
            get {
                return this.resolutionField;
            }
            set {
                if ((this.resolutionField.Equals(value) != true)) {
                    this.resolutionField = value;
                    this.RaisePropertyChanged("resolution");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string satellite {
            get {
                return this.satelliteField;
            }
            set {
                if ((object.ReferenceEquals(this.satelliteField, value) != true)) {
                    this.satelliteField = value;
                    this.RaisePropertyChanged("satellite");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string sensor {
            get {
                return this.sensorField;
            }
            set {
                if ((object.ReferenceEquals(this.sensorField, value) != true)) {
                    this.sensorField = value;
                    this.RaisePropertyChanged("sensor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string station {
            get {
                return this.stationField;
            }
            set {
                if ((object.ReferenceEquals(this.stationField, value) != true)) {
                    this.stationField = value;
                    this.RaisePropertyChanged("station");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string taskType {
            get {
                return this.taskTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.taskTypeField, value) != true)) {
                    this.taskTypeField = value;
                    this.RaisePropertyChanged("taskType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MonitorProductInfo", Namespace="http://bean.monitorProductInfo.business.hdht.org")]
    [System.SerializableAttribute()]
    public partial class MonitorProductInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string approveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string extendFilesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string imageNoteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GeoDo.RSS.UI.AddIn.HdService.HdDataServer.Info infoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GeoDo.RSS.UI.AddIn.HdService.HdDataServer.OperateEvent operateEventField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime orbitDateTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string productAreaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string productDataTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string productFileNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string productFilePathField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string productIdentifyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string productIdentifyNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string productTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string resolutionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string satelliteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string sensorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string subProductTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string totalField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string approve {
            get {
                return this.approveField;
            }
            set {
                if ((object.ReferenceEquals(this.approveField, value) != true)) {
                    this.approveField = value;
                    this.RaisePropertyChanged("approve");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string extendFiles {
            get {
                return this.extendFilesField;
            }
            set {
                if ((object.ReferenceEquals(this.extendFilesField, value) != true)) {
                    this.extendFilesField = value;
                    this.RaisePropertyChanged("extendFiles");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string id {
            get {
                return this.idField;
            }
            set {
                if ((object.ReferenceEquals(this.idField, value) != true)) {
                    this.idField = value;
                    this.RaisePropertyChanged("id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string imageNote {
            get {
                return this.imageNoteField;
            }
            set {
                if ((object.ReferenceEquals(this.imageNoteField, value) != true)) {
                    this.imageNoteField = value;
                    this.RaisePropertyChanged("imageNote");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GeoDo.RSS.UI.AddIn.HdService.HdDataServer.Info info {
            get {
                return this.infoField;
            }
            set {
                if ((object.ReferenceEquals(this.infoField, value) != true)) {
                    this.infoField = value;
                    this.RaisePropertyChanged("info");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GeoDo.RSS.UI.AddIn.HdService.HdDataServer.OperateEvent operateEvent {
            get {
                return this.operateEventField;
            }
            set {
                if ((object.ReferenceEquals(this.operateEventField, value) != true)) {
                    this.operateEventField = value;
                    this.RaisePropertyChanged("operateEvent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime orbitDateTime {
            get {
                return this.orbitDateTimeField;
            }
            set {
                if ((this.orbitDateTimeField.Equals(value) != true)) {
                    this.orbitDateTimeField = value;
                    this.RaisePropertyChanged("orbitDateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string productArea {
            get {
                return this.productAreaField;
            }
            set {
                if ((object.ReferenceEquals(this.productAreaField, value) != true)) {
                    this.productAreaField = value;
                    this.RaisePropertyChanged("productArea");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string productDataType {
            get {
                return this.productDataTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.productDataTypeField, value) != true)) {
                    this.productDataTypeField = value;
                    this.RaisePropertyChanged("productDataType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string productFileName {
            get {
                return this.productFileNameField;
            }
            set {
                if ((object.ReferenceEquals(this.productFileNameField, value) != true)) {
                    this.productFileNameField = value;
                    this.RaisePropertyChanged("productFileName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string productFilePath {
            get {
                return this.productFilePathField;
            }
            set {
                if ((object.ReferenceEquals(this.productFilePathField, value) != true)) {
                    this.productFilePathField = value;
                    this.RaisePropertyChanged("productFilePath");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string productIdentify {
            get {
                return this.productIdentifyField;
            }
            set {
                if ((object.ReferenceEquals(this.productIdentifyField, value) != true)) {
                    this.productIdentifyField = value;
                    this.RaisePropertyChanged("productIdentify");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string productIdentifyName {
            get {
                return this.productIdentifyNameField;
            }
            set {
                if ((object.ReferenceEquals(this.productIdentifyNameField, value) != true)) {
                    this.productIdentifyNameField = value;
                    this.RaisePropertyChanged("productIdentifyName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string productType {
            get {
                return this.productTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.productTypeField, value) != true)) {
                    this.productTypeField = value;
                    this.RaisePropertyChanged("productType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string resolution {
            get {
                return this.resolutionField;
            }
            set {
                if ((object.ReferenceEquals(this.resolutionField, value) != true)) {
                    this.resolutionField = value;
                    this.RaisePropertyChanged("resolution");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string satellite {
            get {
                return this.satelliteField;
            }
            set {
                if ((object.ReferenceEquals(this.satelliteField, value) != true)) {
                    this.satelliteField = value;
                    this.RaisePropertyChanged("satellite");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string sensor {
            get {
                return this.sensorField;
            }
            set {
                if ((object.ReferenceEquals(this.sensorField, value) != true)) {
                    this.sensorField = value;
                    this.RaisePropertyChanged("sensor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string subProductType {
            get {
                return this.subProductTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.subProductTypeField, value) != true)) {
                    this.subProductTypeField = value;
                    this.RaisePropertyChanged("subProductType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string total {
            get {
                return this.totalField;
            }
            set {
                if ((object.ReferenceEquals(this.totalField, value) != true)) {
                    this.totalField = value;
                    this.RaisePropertyChanged("total");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Info", Namespace="http://bean.monitorProductInfo.business.hdht.org")]
    [System.SerializableAttribute()]
    public partial class Info : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime orbitDateTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string satelliteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string sensorField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime orbitDateTime {
            get {
                return this.orbitDateTimeField;
            }
            set {
                if ((this.orbitDateTimeField.Equals(value) != true)) {
                    this.orbitDateTimeField = value;
                    this.RaisePropertyChanged("orbitDateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string satellite {
            get {
                return this.satelliteField;
            }
            set {
                if ((object.ReferenceEquals(this.satelliteField, value) != true)) {
                    this.satelliteField = value;
                    this.RaisePropertyChanged("satellite");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string sensor {
            get {
                return this.sensorField;
            }
            set {
                if ((object.ReferenceEquals(this.sensorField, value) != true)) {
                    this.sensorField = value;
                    this.RaisePropertyChanged("sensor");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OperateEvent", Namespace="http://bean.operatelog.logger.system.hdht.org")]
    [System.SerializableAttribute()]
    public partial class OperateEvent : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string descriptionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string eventDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string eventNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime eventTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string eventTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string operatorIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int statusField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string descriptions {
            get {
                return this.descriptionsField;
            }
            set {
                if ((object.ReferenceEquals(this.descriptionsField, value) != true)) {
                    this.descriptionsField = value;
                    this.RaisePropertyChanged("descriptions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string eventData {
            get {
                return this.eventDataField;
            }
            set {
                if ((object.ReferenceEquals(this.eventDataField, value) != true)) {
                    this.eventDataField = value;
                    this.RaisePropertyChanged("eventData");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string eventName {
            get {
                return this.eventNameField;
            }
            set {
                if ((object.ReferenceEquals(this.eventNameField, value) != true)) {
                    this.eventNameField = value;
                    this.RaisePropertyChanged("eventName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime eventTime {
            get {
                return this.eventTimeField;
            }
            set {
                if ((this.eventTimeField.Equals(value) != true)) {
                    this.eventTimeField = value;
                    this.RaisePropertyChanged("eventTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string eventType {
            get {
                return this.eventTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.eventTypeField, value) != true)) {
                    this.eventTypeField = value;
                    this.RaisePropertyChanged("eventType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string id {
            get {
                return this.idField;
            }
            set {
                if ((object.ReferenceEquals(this.idField, value) != true)) {
                    this.idField = value;
                    this.RaisePropertyChanged("id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string operatorId {
            get {
                return this.operatorIdField;
            }
            set {
                if ((object.ReferenceEquals(this.operatorIdField, value) != true)) {
                    this.operatorIdField = value;
                    this.RaisePropertyChanged("operatorId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int status {
            get {
                return this.statusField;
            }
            set {
                if ((this.statusField.Equals(value) != true)) {
                    this.statusField = value;
                    this.RaisePropertyChanged("status");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BlockInfo", Namespace="http://bean.block.geodo.business.hdht.org")]
    [System.SerializableAttribute()]
    public partial class BlockInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string blockidentifyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime createTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string datapathField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string envnameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string extendfilesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long fileSizeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int isDeleteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> maxxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> maxyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string messageinfoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string messagetypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> minxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> minyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GeoDo.RSS.UI.AddIn.HdService.HdDataServer.MosaicInfo mosaicInfoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GeoDo.RSS.UI.AddIn.HdService.HdDataServer.ProjectionInfo projectionInfoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float resolutionxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float resolutionyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GeoDo.RSS.UI.AddIn.HdService.HdDataServer.Scheduler schedulerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string taskTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string thumbnailField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string blockidentify {
            get {
                return this.blockidentifyField;
            }
            set {
                if ((object.ReferenceEquals(this.blockidentifyField, value) != true)) {
                    this.blockidentifyField = value;
                    this.RaisePropertyChanged("blockidentify");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime createTime {
            get {
                return this.createTimeField;
            }
            set {
                if ((this.createTimeField.Equals(value) != true)) {
                    this.createTimeField = value;
                    this.RaisePropertyChanged("createTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string datapath {
            get {
                return this.datapathField;
            }
            set {
                if ((object.ReferenceEquals(this.datapathField, value) != true)) {
                    this.datapathField = value;
                    this.RaisePropertyChanged("datapath");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string envname {
            get {
                return this.envnameField;
            }
            set {
                if ((object.ReferenceEquals(this.envnameField, value) != true)) {
                    this.envnameField = value;
                    this.RaisePropertyChanged("envname");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string extendfiles {
            get {
                return this.extendfilesField;
            }
            set {
                if ((object.ReferenceEquals(this.extendfilesField, value) != true)) {
                    this.extendfilesField = value;
                    this.RaisePropertyChanged("extendfiles");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long fileSize {
            get {
                return this.fileSizeField;
            }
            set {
                if ((this.fileSizeField.Equals(value) != true)) {
                    this.fileSizeField = value;
                    this.RaisePropertyChanged("fileSize");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string id {
            get {
                return this.idField;
            }
            set {
                if ((object.ReferenceEquals(this.idField, value) != true)) {
                    this.idField = value;
                    this.RaisePropertyChanged("id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int isDelete {
            get {
                return this.isDeleteField;
            }
            set {
                if ((this.isDeleteField.Equals(value) != true)) {
                    this.isDeleteField = value;
                    this.RaisePropertyChanged("isDelete");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> maxx {
            get {
                return this.maxxField;
            }
            set {
                if ((this.maxxField.Equals(value) != true)) {
                    this.maxxField = value;
                    this.RaisePropertyChanged("maxx");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> maxy {
            get {
                return this.maxyField;
            }
            set {
                if ((this.maxyField.Equals(value) != true)) {
                    this.maxyField = value;
                    this.RaisePropertyChanged("maxy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string messageinfo {
            get {
                return this.messageinfoField;
            }
            set {
                if ((object.ReferenceEquals(this.messageinfoField, value) != true)) {
                    this.messageinfoField = value;
                    this.RaisePropertyChanged("messageinfo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string messagetype {
            get {
                return this.messagetypeField;
            }
            set {
                if ((object.ReferenceEquals(this.messagetypeField, value) != true)) {
                    this.messagetypeField = value;
                    this.RaisePropertyChanged("messagetype");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> minx {
            get {
                return this.minxField;
            }
            set {
                if ((this.minxField.Equals(value) != true)) {
                    this.minxField = value;
                    this.RaisePropertyChanged("minx");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> miny {
            get {
                return this.minyField;
            }
            set {
                if ((this.minyField.Equals(value) != true)) {
                    this.minyField = value;
                    this.RaisePropertyChanged("miny");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GeoDo.RSS.UI.AddIn.HdService.HdDataServer.MosaicInfo mosaicInfo {
            get {
                return this.mosaicInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.mosaicInfoField, value) != true)) {
                    this.mosaicInfoField = value;
                    this.RaisePropertyChanged("mosaicInfo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GeoDo.RSS.UI.AddIn.HdService.HdDataServer.ProjectionInfo projectionInfo {
            get {
                return this.projectionInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.projectionInfoField, value) != true)) {
                    this.projectionInfoField = value;
                    this.RaisePropertyChanged("projectionInfo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float resolutionx {
            get {
                return this.resolutionxField;
            }
            set {
                if ((this.resolutionxField.Equals(value) != true)) {
                    this.resolutionxField = value;
                    this.RaisePropertyChanged("resolutionx");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float resolutiony {
            get {
                return this.resolutionyField;
            }
            set {
                if ((this.resolutionyField.Equals(value) != true)) {
                    this.resolutionyField = value;
                    this.RaisePropertyChanged("resolutiony");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GeoDo.RSS.UI.AddIn.HdService.HdDataServer.Scheduler scheduler {
            get {
                return this.schedulerField;
            }
            set {
                if ((object.ReferenceEquals(this.schedulerField, value) != true)) {
                    this.schedulerField = value;
                    this.RaisePropertyChanged("scheduler");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string taskType {
            get {
                return this.taskTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.taskTypeField, value) != true)) {
                    this.taskTypeField = value;
                    this.RaisePropertyChanged("taskType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string thumbnail {
            get {
                return this.thumbnailField;
            }
            set {
                if ((object.ReferenceEquals(this.thumbnailField, value) != true)) {
                    this.thumbnailField = value;
                    this.RaisePropertyChanged("thumbnail");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FyImages", Namespace="http://bean.fyImages.business.hdht.org")]
    [System.SerializableAttribute()]
    public partial class FyImages : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string imageTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string imagepathField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string longlatitudeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string resolutionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string satelliteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string sensorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string smallpathField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string id {
            get {
                return this.idField;
            }
            set {
                if ((object.ReferenceEquals(this.idField, value) != true)) {
                    this.idField = value;
                    this.RaisePropertyChanged("id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string imageTime {
            get {
                return this.imageTimeField;
            }
            set {
                if ((object.ReferenceEquals(this.imageTimeField, value) != true)) {
                    this.imageTimeField = value;
                    this.RaisePropertyChanged("imageTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string imagepath {
            get {
                return this.imagepathField;
            }
            set {
                if ((object.ReferenceEquals(this.imagepathField, value) != true)) {
                    this.imagepathField = value;
                    this.RaisePropertyChanged("imagepath");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string longlatitude {
            get {
                return this.longlatitudeField;
            }
            set {
                if ((object.ReferenceEquals(this.longlatitudeField, value) != true)) {
                    this.longlatitudeField = value;
                    this.RaisePropertyChanged("longlatitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string resolution {
            get {
                return this.resolutionField;
            }
            set {
                if ((object.ReferenceEquals(this.resolutionField, value) != true)) {
                    this.resolutionField = value;
                    this.RaisePropertyChanged("resolution");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string satellite {
            get {
                return this.satelliteField;
            }
            set {
                if ((object.ReferenceEquals(this.satelliteField, value) != true)) {
                    this.satelliteField = value;
                    this.RaisePropertyChanged("satellite");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string sensor {
            get {
                return this.sensorField;
            }
            set {
                if ((object.ReferenceEquals(this.sensorField, value) != true)) {
                    this.sensorField = value;
                    this.RaisePropertyChanged("sensor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string smallpath {
            get {
                return this.smallpathField;
            }
            set {
                if ((object.ReferenceEquals(this.smallpathField, value) != true)) {
                    this.smallpathField = value;
                    this.RaisePropertyChanged("smallpath");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://dataserver.service.webservice.hdht.org", ConfigurationName="HdDataServer.DataSearchServerPortType")]
    public interface DataSearchServerPortType {
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="out")]
        GeoDo.RSS.UI.AddIn.HdService.HdDataServer.ArrayOfString getRasterDats(string in0, string in1, string in2, string in3, string in4, string in5, string in6, string in7);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="", ReplyAction="*")]
        System.IAsyncResult BegingetRasterDats(string in0, string in1, string in2, string in3, string in4, string in5, string in6, string in7, System.AsyncCallback callback, object asyncState);
        
        [return: System.ServiceModel.MessageParameterAttribute(Name="out")]
        GeoDo.RSS.UI.AddIn.HdService.HdDataServer.ArrayOfString EndgetRasterDats(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(GeoDo.RSS.UI.AddIn.HdService.HdDataServer.ArrayOfString))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(GeoDo.RSS.UI.AddIn.HdService.HdDataServer.Extent))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(GeoDo.RSS.UI.AddIn.HdService.HdDataServer.ArrayOfAnyType))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(GeoDo.RSS.UI.AddIn.HdService.HdDataServer.MosaicInfo[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(GeoDo.RSS.UI.AddIn.HdService.HdDataServer.MosaicInfo))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(GeoDo.RSS.UI.AddIn.HdService.HdDataServer.Scheduler))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(GeoDo.RSS.UI.AddIn.HdService.HdDataServer.ParameterBean[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(GeoDo.RSS.UI.AddIn.HdService.HdDataServer.ParameterBean))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(GeoDo.RSS.UI.AddIn.HdService.HdDataServer.SupportDataCatalog))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(GeoDo.RSS.UI.AddIn.HdService.HdDataServer.SupportDataCatalog[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(GeoDo.RSS.UI.AddIn.HdService.HdDataServer.ProjectionInfo[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(GeoDo.RSS.UI.AddIn.HdService.HdDataServer.ProjectionInfo))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(GeoDo.RSS.UI.AddIn.HdService.HdDataServer.OrbitInfo))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(GeoDo.RSS.UI.AddIn.HdService.HdDataServer.OrbitInfo[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(GeoDo.RSS.UI.AddIn.HdService.HdDataServer.File))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(GeoDo.RSS.UI.AddIn.HdService.HdDataServer.MonitorProductInfo))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(GeoDo.RSS.UI.AddIn.HdService.HdDataServer.Info))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(GeoDo.RSS.UI.AddIn.HdService.HdDataServer.MonitorProductInfo[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(GeoDo.RSS.UI.AddIn.HdService.HdDataServer.OperateEvent))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(GeoDo.RSS.UI.AddIn.HdService.HdDataServer.BlockInfo[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(GeoDo.RSS.UI.AddIn.HdService.HdDataServer.BlockInfo))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(GeoDo.RSS.UI.AddIn.HdService.HdDataServer.FyImages[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(GeoDo.RSS.UI.AddIn.HdService.HdDataServer.FyImages))]
        [return: System.ServiceModel.MessageParameterAttribute(Name="out")]
        GeoDo.RSS.UI.AddIn.HdService.HdDataServer.ArrayOfAnyType getZCTgroupBlock();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="", ReplyAction="*")]
        System.IAsyncResult BegingetZCTgroupBlock(System.AsyncCallback callback, object asyncState);
        
        [return: System.ServiceModel.MessageParameterAttribute(Name="out")]
        GeoDo.RSS.UI.AddIn.HdService.HdDataServer.ArrayOfAnyType EndgetZCTgroupBlock(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="out")]
        GeoDo.RSS.UI.AddIn.HdService.HdDataServer.MosaicInfo[] getMosaics(System.DateTime in0, System.DateTime in1, string in2, string in3, System.Nullable<float> in4, GeoDo.RSS.UI.AddIn.HdService.HdDataServer.Extent in5, string in6);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="", ReplyAction="*")]
        System.IAsyncResult BegingetMosaics(System.DateTime in0, System.DateTime in1, string in2, string in3, System.Nullable<float> in4, GeoDo.RSS.UI.AddIn.HdService.HdDataServer.Extent in5, string in6, System.AsyncCallback callback, object asyncState);
        
        [return: System.ServiceModel.MessageParameterAttribute(Name="out")]
        GeoDo.RSS.UI.AddIn.HdService.HdDataServer.MosaicInfo[] EndgetMosaics(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="out")]
        GeoDo.RSS.UI.AddIn.HdService.HdDataServer.ProjectionInfo[] getMosaicDatas(string in0);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="", ReplyAction="*")]
        System.IAsyncResult BegingetMosaicDatas(string in0, System.AsyncCallback callback, object asyncState);
        
        [return: System.ServiceModel.MessageParameterAttribute(Name="out")]
        GeoDo.RSS.UI.AddIn.HdService.HdDataServer.ProjectionInfo[] EndgetMosaicDatas(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="out")]
        GeoDo.RSS.UI.AddIn.HdService.HdDataServer.ProjectionInfo getProjection(string in0);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="", ReplyAction="*")]
        System.IAsyncResult BegingetProjection(string in0, System.AsyncCallback callback, object asyncState);
        
        [return: System.ServiceModel.MessageParameterAttribute(Name="out")]
        GeoDo.RSS.UI.AddIn.HdService.HdDataServer.ProjectionInfo EndgetProjection(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="out")]
        bool saveProductInfo(GeoDo.RSS.UI.AddIn.HdService.HdDataServer.MonitorProductInfo in0);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="", ReplyAction="*")]
        System.IAsyncResult BeginsaveProductInfo(GeoDo.RSS.UI.AddIn.HdService.HdDataServer.MonitorProductInfo in0, System.AsyncCallback callback, object asyncState);
        
        [return: System.ServiceModel.MessageParameterAttribute(Name="out")]
        bool EndsaveProductInfo(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="out")]
        GeoDo.RSS.UI.AddIn.HdService.HdDataServer.BlockInfo[] getBlocks(System.DateTime in0, System.DateTime in1, string in2, string in3, System.Nullable<float> in4, GeoDo.RSS.UI.AddIn.HdService.HdDataServer.Extent in5, string in6);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="", ReplyAction="*")]
        System.IAsyncResult BegingetBlocks(System.DateTime in0, System.DateTime in1, string in2, string in3, System.Nullable<float> in4, GeoDo.RSS.UI.AddIn.HdService.HdDataServer.Extent in5, string in6, System.AsyncCallback callback, object asyncState);
        
        [return: System.ServiceModel.MessageParameterAttribute(Name="out")]
        GeoDo.RSS.UI.AddIn.HdService.HdDataServer.BlockInfo[] EndgetBlocks(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="out")]
        GeoDo.RSS.UI.AddIn.HdService.HdDataServer.ProjectionInfo[] getProjections(System.DateTime in0, System.DateTime in1, string in2, string in3, System.Nullable<float> in4, GeoDo.RSS.UI.AddIn.HdService.HdDataServer.Extent in5, string in6);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="", ReplyAction="*")]
        System.IAsyncResult BegingetProjections(System.DateTime in0, System.DateTime in1, string in2, string in3, System.Nullable<float> in4, GeoDo.RSS.UI.AddIn.HdService.HdDataServer.Extent in5, string in6, System.AsyncCallback callback, object asyncState);
        
        [return: System.ServiceModel.MessageParameterAttribute(Name="out")]
        GeoDo.RSS.UI.AddIn.HdService.HdDataServer.ProjectionInfo[] EndgetProjections(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="out")]
        GeoDo.RSS.UI.AddIn.HdService.HdDataServer.BlockInfo[] getBlocksByFile(string in0, string in1);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="", ReplyAction="*")]
        System.IAsyncResult BegingetBlocksByFile(string in0, string in1, System.AsyncCallback callback, object asyncState);
        
        [return: System.ServiceModel.MessageParameterAttribute(Name="out")]
        GeoDo.RSS.UI.AddIn.HdService.HdDataServer.BlockInfo[] EndgetBlocksByFile(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="out")]
        GeoDo.RSS.UI.AddIn.HdService.HdDataServer.OrbitInfo[] getOrbits(System.DateTime in0, System.DateTime in1, string in2, string in3, System.Nullable<float> in4, GeoDo.RSS.UI.AddIn.HdService.HdDataServer.Extent in5, string in6);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="", ReplyAction="*")]
        System.IAsyncResult BegingetOrbits(System.DateTime in0, System.DateTime in1, string in2, string in3, System.Nullable<float> in4, GeoDo.RSS.UI.AddIn.HdService.HdDataServer.Extent in5, string in6, System.AsyncCallback callback, object asyncState);
        
        [return: System.ServiceModel.MessageParameterAttribute(Name="out")]
        GeoDo.RSS.UI.AddIn.HdService.HdDataServer.OrbitInfo[] EndgetOrbits(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="out")]
        GeoDo.RSS.UI.AddIn.HdService.HdDataServer.BlockInfo getBlock(string in0);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="", ReplyAction="*")]
        System.IAsyncResult BegingetBlock(string in0, System.AsyncCallback callback, object asyncState);
        
        [return: System.ServiceModel.MessageParameterAttribute(Name="out")]
        GeoDo.RSS.UI.AddIn.HdService.HdDataServer.BlockInfo EndgetBlock(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="out")]
        GeoDo.RSS.UI.AddIn.HdService.HdDataServer.FyImages[] getZCTformName(string in0);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="", ReplyAction="*")]
        System.IAsyncResult BegingetZCTformName(string in0, System.AsyncCallback callback, object asyncState);
        
        [return: System.ServiceModel.MessageParameterAttribute(Name="out")]
        GeoDo.RSS.UI.AddIn.HdService.HdDataServer.FyImages[] EndgetZCTformName(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="out")]
        GeoDo.RSS.UI.AddIn.HdService.HdDataServer.FyImages[] getZCTformTime(string in0);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="", ReplyAction="*")]
        System.IAsyncResult BegingetZCTformTime(string in0, System.AsyncCallback callback, object asyncState);
        
        [return: System.ServiceModel.MessageParameterAttribute(Name="out")]
        GeoDo.RSS.UI.AddIn.HdService.HdDataServer.FyImages[] EndgetZCTformTime(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="out")]
        string getDataDir(GeoDo.RSS.UI.AddIn.HdService.HdDataServer.MonitorProductInfo in0);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="", ReplyAction="*")]
        System.IAsyncResult BegingetDataDir(GeoDo.RSS.UI.AddIn.HdService.HdDataServer.MonitorProductInfo in0, System.AsyncCallback callback, object asyncState);
        
        [return: System.ServiceModel.MessageParameterAttribute(Name="out")]
        string EndgetDataDir(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="out")]
        bool saveProductInfos(GeoDo.RSS.UI.AddIn.HdService.HdDataServer.MonitorProductInfo[] in0);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="", ReplyAction="*")]
        System.IAsyncResult BeginsaveProductInfos(GeoDo.RSS.UI.AddIn.HdService.HdDataServer.MonitorProductInfo[] in0, System.AsyncCallback callback, object asyncState);
        
        [return: System.ServiceModel.MessageParameterAttribute(Name="out")]
        bool EndsaveProductInfos(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="out")]
        GeoDo.RSS.UI.AddIn.HdService.HdDataServer.ArrayOfString getTimeFromName(string in0);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="", ReplyAction="*")]
        System.IAsyncResult BegingetTimeFromName(string in0, System.AsyncCallback callback, object asyncState);
        
        [return: System.ServiceModel.MessageParameterAttribute(Name="out")]
        GeoDo.RSS.UI.AddIn.HdService.HdDataServer.ArrayOfString EndgetTimeFromName(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface DataSearchServerPortTypeChannel : GeoDo.RSS.UI.AddIn.HdService.HdDataServer.DataSearchServerPortType, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class getRasterDatsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public getRasterDatsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public GeoDo.RSS.UI.AddIn.HdService.HdDataServer.ArrayOfString Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((GeoDo.RSS.UI.AddIn.HdService.HdDataServer.ArrayOfString)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class getZCTgroupBlockCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public getZCTgroupBlockCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public GeoDo.RSS.UI.AddIn.HdService.HdDataServer.ArrayOfAnyType Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((GeoDo.RSS.UI.AddIn.HdService.HdDataServer.ArrayOfAnyType)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class getMosaicsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public getMosaicsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public GeoDo.RSS.UI.AddIn.HdService.HdDataServer.MosaicInfo[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((GeoDo.RSS.UI.AddIn.HdService.HdDataServer.MosaicInfo[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class getMosaicDatasCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public getMosaicDatasCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public GeoDo.RSS.UI.AddIn.HdService.HdDataServer.ProjectionInfo[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((GeoDo.RSS.UI.AddIn.HdService.HdDataServer.ProjectionInfo[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class getProjectionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public getProjectionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public GeoDo.RSS.UI.AddIn.HdService.HdDataServer.ProjectionInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((GeoDo.RSS.UI.AddIn.HdService.HdDataServer.ProjectionInfo)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class saveProductInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public saveProductInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class getBlocksCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public getBlocksCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public GeoDo.RSS.UI.AddIn.HdService.HdDataServer.BlockInfo[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((GeoDo.RSS.UI.AddIn.HdService.HdDataServer.BlockInfo[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class getProjectionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public getProjectionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public GeoDo.RSS.UI.AddIn.HdService.HdDataServer.ProjectionInfo[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((GeoDo.RSS.UI.AddIn.HdService.HdDataServer.ProjectionInfo[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class getBlocksByFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public getBlocksByFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public GeoDo.RSS.UI.AddIn.HdService.HdDataServer.BlockInfo[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((GeoDo.RSS.UI.AddIn.HdService.HdDataServer.BlockInfo[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class getOrbitsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public getOrbitsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public GeoDo.RSS.UI.AddIn.HdService.HdDataServer.OrbitInfo[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((GeoDo.RSS.UI.AddIn.HdService.HdDataServer.OrbitInfo[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class getBlockCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public getBlockCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public GeoDo.RSS.UI.AddIn.HdService.HdDataServer.BlockInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((GeoDo.RSS.UI.AddIn.HdService.HdDataServer.BlockInfo)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class getZCTformNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public getZCTformNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public GeoDo.RSS.UI.AddIn.HdService.HdDataServer.FyImages[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((GeoDo.RSS.UI.AddIn.HdService.HdDataServer.FyImages[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class getZCTformTimeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public getZCTformTimeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public GeoDo.RSS.UI.AddIn.HdService.HdDataServer.FyImages[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((GeoDo.RSS.UI.AddIn.HdService.HdDataServer.FyImages[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class getDataDirCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public getDataDirCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class saveProductInfosCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public saveProductInfosCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class getTimeFromNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public getTimeFromNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public GeoDo.RSS.UI.AddIn.HdService.HdDataServer.ArrayOfString Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((GeoDo.RSS.UI.AddIn.HdService.HdDataServer.ArrayOfString)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DataSearchServerPortTypeClient : System.ServiceModel.ClientBase<GeoDo.RSS.UI.AddIn.HdService.HdDataServer.DataSearchServerPortType>, GeoDo.RSS.UI.AddIn.HdService.HdDataServer.DataSearchServerPortType {
        
        private BeginOperationDelegate onBegingetRasterDatsDelegate;
        
        private EndOperationDelegate onEndgetRasterDatsDelegate;
        
        private System.Threading.SendOrPostCallback ongetRasterDatsCompletedDelegate;
        
        private BeginOperationDelegate onBegingetZCTgroupBlockDelegate;
        
        private EndOperationDelegate onEndgetZCTgroupBlockDelegate;
        
        private System.Threading.SendOrPostCallback ongetZCTgroupBlockCompletedDelegate;
        
        private BeginOperationDelegate onBegingetMosaicsDelegate;
        
        private EndOperationDelegate onEndgetMosaicsDelegate;
        
        private System.Threading.SendOrPostCallback ongetMosaicsCompletedDelegate;
        
        private BeginOperationDelegate onBegingetMosaicDatasDelegate;
        
        private EndOperationDelegate onEndgetMosaicDatasDelegate;
        
        private System.Threading.SendOrPostCallback ongetMosaicDatasCompletedDelegate;
        
        private BeginOperationDelegate onBegingetProjectionDelegate;
        
        private EndOperationDelegate onEndgetProjectionDelegate;
        
        private System.Threading.SendOrPostCallback ongetProjectionCompletedDelegate;
        
        private BeginOperationDelegate onBeginsaveProductInfoDelegate;
        
        private EndOperationDelegate onEndsaveProductInfoDelegate;
        
        private System.Threading.SendOrPostCallback onsaveProductInfoCompletedDelegate;
        
        private BeginOperationDelegate onBegingetBlocksDelegate;
        
        private EndOperationDelegate onEndgetBlocksDelegate;
        
        private System.Threading.SendOrPostCallback ongetBlocksCompletedDelegate;
        
        private BeginOperationDelegate onBegingetProjectionsDelegate;
        
        private EndOperationDelegate onEndgetProjectionsDelegate;
        
        private System.Threading.SendOrPostCallback ongetProjectionsCompletedDelegate;
        
        private BeginOperationDelegate onBegingetBlocksByFileDelegate;
        
        private EndOperationDelegate onEndgetBlocksByFileDelegate;
        
        private System.Threading.SendOrPostCallback ongetBlocksByFileCompletedDelegate;
        
        private BeginOperationDelegate onBegingetOrbitsDelegate;
        
        private EndOperationDelegate onEndgetOrbitsDelegate;
        
        private System.Threading.SendOrPostCallback ongetOrbitsCompletedDelegate;
        
        private BeginOperationDelegate onBegingetBlockDelegate;
        
        private EndOperationDelegate onEndgetBlockDelegate;
        
        private System.Threading.SendOrPostCallback ongetBlockCompletedDelegate;
        
        private BeginOperationDelegate onBegingetZCTformNameDelegate;
        
        private EndOperationDelegate onEndgetZCTformNameDelegate;
        
        private System.Threading.SendOrPostCallback ongetZCTformNameCompletedDelegate;
        
        private BeginOperationDelegate onBegingetZCTformTimeDelegate;
        
        private EndOperationDelegate onEndgetZCTformTimeDelegate;
        
        private System.Threading.SendOrPostCallback ongetZCTformTimeCompletedDelegate;
        
        private BeginOperationDelegate onBegingetDataDirDelegate;
        
        private EndOperationDelegate onEndgetDataDirDelegate;
        
        private System.Threading.SendOrPostCallback ongetDataDirCompletedDelegate;
        
        private BeginOperationDelegate onBeginsaveProductInfosDelegate;
        
        private EndOperationDelegate onEndsaveProductInfosDelegate;
        
        private System.Threading.SendOrPostCallback onsaveProductInfosCompletedDelegate;
        
        private BeginOperationDelegate onBegingetTimeFromNameDelegate;
        
        private EndOperationDelegate onEndgetTimeFromNameDelegate;
        
        private System.Threading.SendOrPostCallback ongetTimeFromNameCompletedDelegate;
        
        public DataSearchServerPortTypeClient() {
        }
        
        public DataSearchServerPortTypeClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public DataSearchServerPortTypeClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DataSearchServerPortTypeClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DataSearchServerPortTypeClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<getRasterDatsCompletedEventArgs> getRasterDatsCompleted;
        
        public event System.EventHandler<getZCTgroupBlockCompletedEventArgs> getZCTgroupBlockCompleted;
        
        public event System.EventHandler<getMosaicsCompletedEventArgs> getMosaicsCompleted;
        
        public event System.EventHandler<getMosaicDatasCompletedEventArgs> getMosaicDatasCompleted;
        
        public event System.EventHandler<getProjectionCompletedEventArgs> getProjectionCompleted;
        
        public event System.EventHandler<saveProductInfoCompletedEventArgs> saveProductInfoCompleted;
        
        public event System.EventHandler<getBlocksCompletedEventArgs> getBlocksCompleted;
        
        public event System.EventHandler<getProjectionsCompletedEventArgs> getProjectionsCompleted;
        
        public event System.EventHandler<getBlocksByFileCompletedEventArgs> getBlocksByFileCompleted;
        
        public event System.EventHandler<getOrbitsCompletedEventArgs> getOrbitsCompleted;
        
        public event System.EventHandler<getBlockCompletedEventArgs> getBlockCompleted;
        
        public event System.EventHandler<getZCTformNameCompletedEventArgs> getZCTformNameCompleted;
        
        public event System.EventHandler<getZCTformTimeCompletedEventArgs> getZCTformTimeCompleted;
        
        public event System.EventHandler<getDataDirCompletedEventArgs> getDataDirCompleted;
        
        public event System.EventHandler<saveProductInfosCompletedEventArgs> saveProductInfosCompleted;
        
        public event System.EventHandler<getTimeFromNameCompletedEventArgs> getTimeFromNameCompleted;
        
        public GeoDo.RSS.UI.AddIn.HdService.HdDataServer.ArrayOfString getRasterDats(string in0, string in1, string in2, string in3, string in4, string in5, string in6, string in7) {
            return base.Channel.getRasterDats(in0, in1, in2, in3, in4, in5, in6, in7);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BegingetRasterDats(string in0, string in1, string in2, string in3, string in4, string in5, string in6, string in7, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BegingetRasterDats(in0, in1, in2, in3, in4, in5, in6, in7, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public GeoDo.RSS.UI.AddIn.HdService.HdDataServer.ArrayOfString EndgetRasterDats(System.IAsyncResult result) {
            return base.Channel.EndgetRasterDats(result);
        }
        
        private System.IAsyncResult OnBegingetRasterDats(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string in0 = ((string)(inValues[0]));
            string in1 = ((string)(inValues[1]));
            string in2 = ((string)(inValues[2]));
            string in3 = ((string)(inValues[3]));
            string in4 = ((string)(inValues[4]));
            string in5 = ((string)(inValues[5]));
            string in6 = ((string)(inValues[6]));
            string in7 = ((string)(inValues[7]));
            return this.BegingetRasterDats(in0, in1, in2, in3, in4, in5, in6, in7, callback, asyncState);
        }
        
        private object[] OnEndgetRasterDats(System.IAsyncResult result) {
            GeoDo.RSS.UI.AddIn.HdService.HdDataServer.ArrayOfString retVal = this.EndgetRasterDats(result);
            return new object[] {
                    retVal};
        }
        
        private void OngetRasterDatsCompleted(object state) {
            if ((this.getRasterDatsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.getRasterDatsCompleted(this, new getRasterDatsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void getRasterDatsAsync(string in0, string in1, string in2, string in3, string in4, string in5, string in6, string in7) {
            this.getRasterDatsAsync(in0, in1, in2, in3, in4, in5, in6, in7, null);
        }
        
        public void getRasterDatsAsync(string in0, string in1, string in2, string in3, string in4, string in5, string in6, string in7, object userState) {
            if ((this.onBegingetRasterDatsDelegate == null)) {
                this.onBegingetRasterDatsDelegate = new BeginOperationDelegate(this.OnBegingetRasterDats);
            }
            if ((this.onEndgetRasterDatsDelegate == null)) {
                this.onEndgetRasterDatsDelegate = new EndOperationDelegate(this.OnEndgetRasterDats);
            }
            if ((this.ongetRasterDatsCompletedDelegate == null)) {
                this.ongetRasterDatsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OngetRasterDatsCompleted);
            }
            base.InvokeAsync(this.onBegingetRasterDatsDelegate, new object[] {
                        in0,
                        in1,
                        in2,
                        in3,
                        in4,
                        in5,
                        in6,
                        in7}, this.onEndgetRasterDatsDelegate, this.ongetRasterDatsCompletedDelegate, userState);
        }
        
        public GeoDo.RSS.UI.AddIn.HdService.HdDataServer.ArrayOfAnyType getZCTgroupBlock() {
            return base.Channel.getZCTgroupBlock();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BegingetZCTgroupBlock(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BegingetZCTgroupBlock(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public GeoDo.RSS.UI.AddIn.HdService.HdDataServer.ArrayOfAnyType EndgetZCTgroupBlock(System.IAsyncResult result) {
            return base.Channel.EndgetZCTgroupBlock(result);
        }
        
        private System.IAsyncResult OnBegingetZCTgroupBlock(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BegingetZCTgroupBlock(callback, asyncState);
        }
        
        private object[] OnEndgetZCTgroupBlock(System.IAsyncResult result) {
            GeoDo.RSS.UI.AddIn.HdService.HdDataServer.ArrayOfAnyType retVal = this.EndgetZCTgroupBlock(result);
            return new object[] {
                    retVal};
        }
        
        private void OngetZCTgroupBlockCompleted(object state) {
            if ((this.getZCTgroupBlockCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.getZCTgroupBlockCompleted(this, new getZCTgroupBlockCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void getZCTgroupBlockAsync() {
            this.getZCTgroupBlockAsync(null);
        }
        
        public void getZCTgroupBlockAsync(object userState) {
            if ((this.onBegingetZCTgroupBlockDelegate == null)) {
                this.onBegingetZCTgroupBlockDelegate = new BeginOperationDelegate(this.OnBegingetZCTgroupBlock);
            }
            if ((this.onEndgetZCTgroupBlockDelegate == null)) {
                this.onEndgetZCTgroupBlockDelegate = new EndOperationDelegate(this.OnEndgetZCTgroupBlock);
            }
            if ((this.ongetZCTgroupBlockCompletedDelegate == null)) {
                this.ongetZCTgroupBlockCompletedDelegate = new System.Threading.SendOrPostCallback(this.OngetZCTgroupBlockCompleted);
            }
            base.InvokeAsync(this.onBegingetZCTgroupBlockDelegate, null, this.onEndgetZCTgroupBlockDelegate, this.ongetZCTgroupBlockCompletedDelegate, userState);
        }
        
        public GeoDo.RSS.UI.AddIn.HdService.HdDataServer.MosaicInfo[] getMosaics(System.DateTime in0, System.DateTime in1, string in2, string in3, System.Nullable<float> in4, GeoDo.RSS.UI.AddIn.HdService.HdDataServer.Extent in5, string in6) {
            return base.Channel.getMosaics(in0, in1, in2, in3, in4, in5, in6);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BegingetMosaics(System.DateTime in0, System.DateTime in1, string in2, string in3, System.Nullable<float> in4, GeoDo.RSS.UI.AddIn.HdService.HdDataServer.Extent in5, string in6, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BegingetMosaics(in0, in1, in2, in3, in4, in5, in6, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public GeoDo.RSS.UI.AddIn.HdService.HdDataServer.MosaicInfo[] EndgetMosaics(System.IAsyncResult result) {
            return base.Channel.EndgetMosaics(result);
        }
        
        private System.IAsyncResult OnBegingetMosaics(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.DateTime in0 = ((System.DateTime)(inValues[0]));
            System.DateTime in1 = ((System.DateTime)(inValues[1]));
            string in2 = ((string)(inValues[2]));
            string in3 = ((string)(inValues[3]));
            System.Nullable<float> in4 = ((System.Nullable<float>)(inValues[4]));
            GeoDo.RSS.UI.AddIn.HdService.HdDataServer.Extent in5 = ((GeoDo.RSS.UI.AddIn.HdService.HdDataServer.Extent)(inValues[5]));
            string in6 = ((string)(inValues[6]));
            return this.BegingetMosaics(in0, in1, in2, in3, in4, in5, in6, callback, asyncState);
        }
        
        private object[] OnEndgetMosaics(System.IAsyncResult result) {
            GeoDo.RSS.UI.AddIn.HdService.HdDataServer.MosaicInfo[] retVal = this.EndgetMosaics(result);
            return new object[] {
                    retVal};
        }
        
        private void OngetMosaicsCompleted(object state) {
            if ((this.getMosaicsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.getMosaicsCompleted(this, new getMosaicsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void getMosaicsAsync(System.DateTime in0, System.DateTime in1, string in2, string in3, System.Nullable<float> in4, GeoDo.RSS.UI.AddIn.HdService.HdDataServer.Extent in5, string in6) {
            this.getMosaicsAsync(in0, in1, in2, in3, in4, in5, in6, null);
        }
        
        public void getMosaicsAsync(System.DateTime in0, System.DateTime in1, string in2, string in3, System.Nullable<float> in4, GeoDo.RSS.UI.AddIn.HdService.HdDataServer.Extent in5, string in6, object userState) {
            if ((this.onBegingetMosaicsDelegate == null)) {
                this.onBegingetMosaicsDelegate = new BeginOperationDelegate(this.OnBegingetMosaics);
            }
            if ((this.onEndgetMosaicsDelegate == null)) {
                this.onEndgetMosaicsDelegate = new EndOperationDelegate(this.OnEndgetMosaics);
            }
            if ((this.ongetMosaicsCompletedDelegate == null)) {
                this.ongetMosaicsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OngetMosaicsCompleted);
            }
            base.InvokeAsync(this.onBegingetMosaicsDelegate, new object[] {
                        in0,
                        in1,
                        in2,
                        in3,
                        in4,
                        in5,
                        in6}, this.onEndgetMosaicsDelegate, this.ongetMosaicsCompletedDelegate, userState);
        }
        
        public GeoDo.RSS.UI.AddIn.HdService.HdDataServer.ProjectionInfo[] getMosaicDatas(string in0) {
            return base.Channel.getMosaicDatas(in0);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BegingetMosaicDatas(string in0, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BegingetMosaicDatas(in0, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public GeoDo.RSS.UI.AddIn.HdService.HdDataServer.ProjectionInfo[] EndgetMosaicDatas(System.IAsyncResult result) {
            return base.Channel.EndgetMosaicDatas(result);
        }
        
        private System.IAsyncResult OnBegingetMosaicDatas(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string in0 = ((string)(inValues[0]));
            return this.BegingetMosaicDatas(in0, callback, asyncState);
        }
        
        private object[] OnEndgetMosaicDatas(System.IAsyncResult result) {
            GeoDo.RSS.UI.AddIn.HdService.HdDataServer.ProjectionInfo[] retVal = this.EndgetMosaicDatas(result);
            return new object[] {
                    retVal};
        }
        
        private void OngetMosaicDatasCompleted(object state) {
            if ((this.getMosaicDatasCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.getMosaicDatasCompleted(this, new getMosaicDatasCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void getMosaicDatasAsync(string in0) {
            this.getMosaicDatasAsync(in0, null);
        }
        
        public void getMosaicDatasAsync(string in0, object userState) {
            if ((this.onBegingetMosaicDatasDelegate == null)) {
                this.onBegingetMosaicDatasDelegate = new BeginOperationDelegate(this.OnBegingetMosaicDatas);
            }
            if ((this.onEndgetMosaicDatasDelegate == null)) {
                this.onEndgetMosaicDatasDelegate = new EndOperationDelegate(this.OnEndgetMosaicDatas);
            }
            if ((this.ongetMosaicDatasCompletedDelegate == null)) {
                this.ongetMosaicDatasCompletedDelegate = new System.Threading.SendOrPostCallback(this.OngetMosaicDatasCompleted);
            }
            base.InvokeAsync(this.onBegingetMosaicDatasDelegate, new object[] {
                        in0}, this.onEndgetMosaicDatasDelegate, this.ongetMosaicDatasCompletedDelegate, userState);
        }
        
        public GeoDo.RSS.UI.AddIn.HdService.HdDataServer.ProjectionInfo getProjection(string in0) {
            return base.Channel.getProjection(in0);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BegingetProjection(string in0, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BegingetProjection(in0, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public GeoDo.RSS.UI.AddIn.HdService.HdDataServer.ProjectionInfo EndgetProjection(System.IAsyncResult result) {
            return base.Channel.EndgetProjection(result);
        }
        
        private System.IAsyncResult OnBegingetProjection(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string in0 = ((string)(inValues[0]));
            return this.BegingetProjection(in0, callback, asyncState);
        }
        
        private object[] OnEndgetProjection(System.IAsyncResult result) {
            GeoDo.RSS.UI.AddIn.HdService.HdDataServer.ProjectionInfo retVal = this.EndgetProjection(result);
            return new object[] {
                    retVal};
        }
        
        private void OngetProjectionCompleted(object state) {
            if ((this.getProjectionCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.getProjectionCompleted(this, new getProjectionCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void getProjectionAsync(string in0) {
            this.getProjectionAsync(in0, null);
        }
        
        public void getProjectionAsync(string in0, object userState) {
            if ((this.onBegingetProjectionDelegate == null)) {
                this.onBegingetProjectionDelegate = new BeginOperationDelegate(this.OnBegingetProjection);
            }
            if ((this.onEndgetProjectionDelegate == null)) {
                this.onEndgetProjectionDelegate = new EndOperationDelegate(this.OnEndgetProjection);
            }
            if ((this.ongetProjectionCompletedDelegate == null)) {
                this.ongetProjectionCompletedDelegate = new System.Threading.SendOrPostCallback(this.OngetProjectionCompleted);
            }
            base.InvokeAsync(this.onBegingetProjectionDelegate, new object[] {
                        in0}, this.onEndgetProjectionDelegate, this.ongetProjectionCompletedDelegate, userState);
        }
        
        public bool saveProductInfo(GeoDo.RSS.UI.AddIn.HdService.HdDataServer.MonitorProductInfo in0) {
            return base.Channel.saveProductInfo(in0);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginsaveProductInfo(GeoDo.RSS.UI.AddIn.HdService.HdDataServer.MonitorProductInfo in0, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginsaveProductInfo(in0, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndsaveProductInfo(System.IAsyncResult result) {
            return base.Channel.EndsaveProductInfo(result);
        }
        
        private System.IAsyncResult OnBeginsaveProductInfo(object[] inValues, System.AsyncCallback callback, object asyncState) {
            GeoDo.RSS.UI.AddIn.HdService.HdDataServer.MonitorProductInfo in0 = ((GeoDo.RSS.UI.AddIn.HdService.HdDataServer.MonitorProductInfo)(inValues[0]));
            return this.BeginsaveProductInfo(in0, callback, asyncState);
        }
        
        private object[] OnEndsaveProductInfo(System.IAsyncResult result) {
            bool retVal = this.EndsaveProductInfo(result);
            return new object[] {
                    retVal};
        }
        
        private void OnsaveProductInfoCompleted(object state) {
            if ((this.saveProductInfoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.saveProductInfoCompleted(this, new saveProductInfoCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void saveProductInfoAsync(GeoDo.RSS.UI.AddIn.HdService.HdDataServer.MonitorProductInfo in0) {
            this.saveProductInfoAsync(in0, null);
        }
        
        public void saveProductInfoAsync(GeoDo.RSS.UI.AddIn.HdService.HdDataServer.MonitorProductInfo in0, object userState) {
            if ((this.onBeginsaveProductInfoDelegate == null)) {
                this.onBeginsaveProductInfoDelegate = new BeginOperationDelegate(this.OnBeginsaveProductInfo);
            }
            if ((this.onEndsaveProductInfoDelegate == null)) {
                this.onEndsaveProductInfoDelegate = new EndOperationDelegate(this.OnEndsaveProductInfo);
            }
            if ((this.onsaveProductInfoCompletedDelegate == null)) {
                this.onsaveProductInfoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnsaveProductInfoCompleted);
            }
            base.InvokeAsync(this.onBeginsaveProductInfoDelegate, new object[] {
                        in0}, this.onEndsaveProductInfoDelegate, this.onsaveProductInfoCompletedDelegate, userState);
        }
        
        public GeoDo.RSS.UI.AddIn.HdService.HdDataServer.BlockInfo[] getBlocks(System.DateTime in0, System.DateTime in1, string in2, string in3, System.Nullable<float> in4, GeoDo.RSS.UI.AddIn.HdService.HdDataServer.Extent in5, string in6) {
            return base.Channel.getBlocks(in0, in1, in2, in3, in4, in5, in6);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BegingetBlocks(System.DateTime in0, System.DateTime in1, string in2, string in3, System.Nullable<float> in4, GeoDo.RSS.UI.AddIn.HdService.HdDataServer.Extent in5, string in6, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BegingetBlocks(in0, in1, in2, in3, in4, in5, in6, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public GeoDo.RSS.UI.AddIn.HdService.HdDataServer.BlockInfo[] EndgetBlocks(System.IAsyncResult result) {
            return base.Channel.EndgetBlocks(result);
        }
        
        private System.IAsyncResult OnBegingetBlocks(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.DateTime in0 = ((System.DateTime)(inValues[0]));
            System.DateTime in1 = ((System.DateTime)(inValues[1]));
            string in2 = ((string)(inValues[2]));
            string in3 = ((string)(inValues[3]));
            System.Nullable<float> in4 = ((System.Nullable<float>)(inValues[4]));
            GeoDo.RSS.UI.AddIn.HdService.HdDataServer.Extent in5 = ((GeoDo.RSS.UI.AddIn.HdService.HdDataServer.Extent)(inValues[5]));
            string in6 = ((string)(inValues[6]));
            return this.BegingetBlocks(in0, in1, in2, in3, in4, in5, in6, callback, asyncState);
        }
        
        private object[] OnEndgetBlocks(System.IAsyncResult result) {
            GeoDo.RSS.UI.AddIn.HdService.HdDataServer.BlockInfo[] retVal = this.EndgetBlocks(result);
            return new object[] {
                    retVal};
        }
        
        private void OngetBlocksCompleted(object state) {
            if ((this.getBlocksCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.getBlocksCompleted(this, new getBlocksCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void getBlocksAsync(System.DateTime in0, System.DateTime in1, string in2, string in3, System.Nullable<float> in4, GeoDo.RSS.UI.AddIn.HdService.HdDataServer.Extent in5, string in6) {
            this.getBlocksAsync(in0, in1, in2, in3, in4, in5, in6, null);
        }
        
        public void getBlocksAsync(System.DateTime in0, System.DateTime in1, string in2, string in3, System.Nullable<float> in4, GeoDo.RSS.UI.AddIn.HdService.HdDataServer.Extent in5, string in6, object userState) {
            if ((this.onBegingetBlocksDelegate == null)) {
                this.onBegingetBlocksDelegate = new BeginOperationDelegate(this.OnBegingetBlocks);
            }
            if ((this.onEndgetBlocksDelegate == null)) {
                this.onEndgetBlocksDelegate = new EndOperationDelegate(this.OnEndgetBlocks);
            }
            if ((this.ongetBlocksCompletedDelegate == null)) {
                this.ongetBlocksCompletedDelegate = new System.Threading.SendOrPostCallback(this.OngetBlocksCompleted);
            }
            base.InvokeAsync(this.onBegingetBlocksDelegate, new object[] {
                        in0,
                        in1,
                        in2,
                        in3,
                        in4,
                        in5,
                        in6}, this.onEndgetBlocksDelegate, this.ongetBlocksCompletedDelegate, userState);
        }
        
        public GeoDo.RSS.UI.AddIn.HdService.HdDataServer.ProjectionInfo[] getProjections(System.DateTime in0, System.DateTime in1, string in2, string in3, System.Nullable<float> in4, GeoDo.RSS.UI.AddIn.HdService.HdDataServer.Extent in5, string in6) {
            return base.Channel.getProjections(in0, in1, in2, in3, in4, in5, in6);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BegingetProjections(System.DateTime in0, System.DateTime in1, string in2, string in3, System.Nullable<float> in4, GeoDo.RSS.UI.AddIn.HdService.HdDataServer.Extent in5, string in6, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BegingetProjections(in0, in1, in2, in3, in4, in5, in6, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public GeoDo.RSS.UI.AddIn.HdService.HdDataServer.ProjectionInfo[] EndgetProjections(System.IAsyncResult result) {
            return base.Channel.EndgetProjections(result);
        }
        
        private System.IAsyncResult OnBegingetProjections(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.DateTime in0 = ((System.DateTime)(inValues[0]));
            System.DateTime in1 = ((System.DateTime)(inValues[1]));
            string in2 = ((string)(inValues[2]));
            string in3 = ((string)(inValues[3]));
            System.Nullable<float> in4 = ((System.Nullable<float>)(inValues[4]));
            GeoDo.RSS.UI.AddIn.HdService.HdDataServer.Extent in5 = ((GeoDo.RSS.UI.AddIn.HdService.HdDataServer.Extent)(inValues[5]));
            string in6 = ((string)(inValues[6]));
            return this.BegingetProjections(in0, in1, in2, in3, in4, in5, in6, callback, asyncState);
        }
        
        private object[] OnEndgetProjections(System.IAsyncResult result) {
            GeoDo.RSS.UI.AddIn.HdService.HdDataServer.ProjectionInfo[] retVal = this.EndgetProjections(result);
            return new object[] {
                    retVal};
        }
        
        private void OngetProjectionsCompleted(object state) {
            if ((this.getProjectionsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.getProjectionsCompleted(this, new getProjectionsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void getProjectionsAsync(System.DateTime in0, System.DateTime in1, string in2, string in3, System.Nullable<float> in4, GeoDo.RSS.UI.AddIn.HdService.HdDataServer.Extent in5, string in6) {
            this.getProjectionsAsync(in0, in1, in2, in3, in4, in5, in6, null);
        }
        
        public void getProjectionsAsync(System.DateTime in0, System.DateTime in1, string in2, string in3, System.Nullable<float> in4, GeoDo.RSS.UI.AddIn.HdService.HdDataServer.Extent in5, string in6, object userState) {
            if ((this.onBegingetProjectionsDelegate == null)) {
                this.onBegingetProjectionsDelegate = new BeginOperationDelegate(this.OnBegingetProjections);
            }
            if ((this.onEndgetProjectionsDelegate == null)) {
                this.onEndgetProjectionsDelegate = new EndOperationDelegate(this.OnEndgetProjections);
            }
            if ((this.ongetProjectionsCompletedDelegate == null)) {
                this.ongetProjectionsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OngetProjectionsCompleted);
            }
            base.InvokeAsync(this.onBegingetProjectionsDelegate, new object[] {
                        in0,
                        in1,
                        in2,
                        in3,
                        in4,
                        in5,
                        in6}, this.onEndgetProjectionsDelegate, this.ongetProjectionsCompletedDelegate, userState);
        }
        
        public GeoDo.RSS.UI.AddIn.HdService.HdDataServer.BlockInfo[] getBlocksByFile(string in0, string in1) {
            return base.Channel.getBlocksByFile(in0, in1);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BegingetBlocksByFile(string in0, string in1, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BegingetBlocksByFile(in0, in1, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public GeoDo.RSS.UI.AddIn.HdService.HdDataServer.BlockInfo[] EndgetBlocksByFile(System.IAsyncResult result) {
            return base.Channel.EndgetBlocksByFile(result);
        }
        
        private System.IAsyncResult OnBegingetBlocksByFile(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string in0 = ((string)(inValues[0]));
            string in1 = ((string)(inValues[1]));
            return this.BegingetBlocksByFile(in0, in1, callback, asyncState);
        }
        
        private object[] OnEndgetBlocksByFile(System.IAsyncResult result) {
            GeoDo.RSS.UI.AddIn.HdService.HdDataServer.BlockInfo[] retVal = this.EndgetBlocksByFile(result);
            return new object[] {
                    retVal};
        }
        
        private void OngetBlocksByFileCompleted(object state) {
            if ((this.getBlocksByFileCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.getBlocksByFileCompleted(this, new getBlocksByFileCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void getBlocksByFileAsync(string in0, string in1) {
            this.getBlocksByFileAsync(in0, in1, null);
        }
        
        public void getBlocksByFileAsync(string in0, string in1, object userState) {
            if ((this.onBegingetBlocksByFileDelegate == null)) {
                this.onBegingetBlocksByFileDelegate = new BeginOperationDelegate(this.OnBegingetBlocksByFile);
            }
            if ((this.onEndgetBlocksByFileDelegate == null)) {
                this.onEndgetBlocksByFileDelegate = new EndOperationDelegate(this.OnEndgetBlocksByFile);
            }
            if ((this.ongetBlocksByFileCompletedDelegate == null)) {
                this.ongetBlocksByFileCompletedDelegate = new System.Threading.SendOrPostCallback(this.OngetBlocksByFileCompleted);
            }
            base.InvokeAsync(this.onBegingetBlocksByFileDelegate, new object[] {
                        in0,
                        in1}, this.onEndgetBlocksByFileDelegate, this.ongetBlocksByFileCompletedDelegate, userState);
        }
        
        public GeoDo.RSS.UI.AddIn.HdService.HdDataServer.OrbitInfo[] getOrbits(System.DateTime in0, System.DateTime in1, string in2, string in3, System.Nullable<float> in4, GeoDo.RSS.UI.AddIn.HdService.HdDataServer.Extent in5, string in6) {
            return base.Channel.getOrbits(in0, in1, in2, in3, in4, in5, in6);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BegingetOrbits(System.DateTime in0, System.DateTime in1, string in2, string in3, System.Nullable<float> in4, GeoDo.RSS.UI.AddIn.HdService.HdDataServer.Extent in5, string in6, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BegingetOrbits(in0, in1, in2, in3, in4, in5, in6, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public GeoDo.RSS.UI.AddIn.HdService.HdDataServer.OrbitInfo[] EndgetOrbits(System.IAsyncResult result) {
            return base.Channel.EndgetOrbits(result);
        }
        
        private System.IAsyncResult OnBegingetOrbits(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.DateTime in0 = ((System.DateTime)(inValues[0]));
            System.DateTime in1 = ((System.DateTime)(inValues[1]));
            string in2 = ((string)(inValues[2]));
            string in3 = ((string)(inValues[3]));
            System.Nullable<float> in4 = ((System.Nullable<float>)(inValues[4]));
            GeoDo.RSS.UI.AddIn.HdService.HdDataServer.Extent in5 = ((GeoDo.RSS.UI.AddIn.HdService.HdDataServer.Extent)(inValues[5]));
            string in6 = ((string)(inValues[6]));
            return this.BegingetOrbits(in0, in1, in2, in3, in4, in5, in6, callback, asyncState);
        }
        
        private object[] OnEndgetOrbits(System.IAsyncResult result) {
            GeoDo.RSS.UI.AddIn.HdService.HdDataServer.OrbitInfo[] retVal = this.EndgetOrbits(result);
            return new object[] {
                    retVal};
        }
        
        private void OngetOrbitsCompleted(object state) {
            if ((this.getOrbitsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.getOrbitsCompleted(this, new getOrbitsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void getOrbitsAsync(System.DateTime in0, System.DateTime in1, string in2, string in3, System.Nullable<float> in4, GeoDo.RSS.UI.AddIn.HdService.HdDataServer.Extent in5, string in6) {
            this.getOrbitsAsync(in0, in1, in2, in3, in4, in5, in6, null);
        }
        
        public void getOrbitsAsync(System.DateTime in0, System.DateTime in1, string in2, string in3, System.Nullable<float> in4, GeoDo.RSS.UI.AddIn.HdService.HdDataServer.Extent in5, string in6, object userState) {
            if ((this.onBegingetOrbitsDelegate == null)) {
                this.onBegingetOrbitsDelegate = new BeginOperationDelegate(this.OnBegingetOrbits);
            }
            if ((this.onEndgetOrbitsDelegate == null)) {
                this.onEndgetOrbitsDelegate = new EndOperationDelegate(this.OnEndgetOrbits);
            }
            if ((this.ongetOrbitsCompletedDelegate == null)) {
                this.ongetOrbitsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OngetOrbitsCompleted);
            }
            base.InvokeAsync(this.onBegingetOrbitsDelegate, new object[] {
                        in0,
                        in1,
                        in2,
                        in3,
                        in4,
                        in5,
                        in6}, this.onEndgetOrbitsDelegate, this.ongetOrbitsCompletedDelegate, userState);
        }
        
        public GeoDo.RSS.UI.AddIn.HdService.HdDataServer.BlockInfo getBlock(string in0) {
            return base.Channel.getBlock(in0);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BegingetBlock(string in0, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BegingetBlock(in0, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public GeoDo.RSS.UI.AddIn.HdService.HdDataServer.BlockInfo EndgetBlock(System.IAsyncResult result) {
            return base.Channel.EndgetBlock(result);
        }
        
        private System.IAsyncResult OnBegingetBlock(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string in0 = ((string)(inValues[0]));
            return this.BegingetBlock(in0, callback, asyncState);
        }
        
        private object[] OnEndgetBlock(System.IAsyncResult result) {
            GeoDo.RSS.UI.AddIn.HdService.HdDataServer.BlockInfo retVal = this.EndgetBlock(result);
            return new object[] {
                    retVal};
        }
        
        private void OngetBlockCompleted(object state) {
            if ((this.getBlockCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.getBlockCompleted(this, new getBlockCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void getBlockAsync(string in0) {
            this.getBlockAsync(in0, null);
        }
        
        public void getBlockAsync(string in0, object userState) {
            if ((this.onBegingetBlockDelegate == null)) {
                this.onBegingetBlockDelegate = new BeginOperationDelegate(this.OnBegingetBlock);
            }
            if ((this.onEndgetBlockDelegate == null)) {
                this.onEndgetBlockDelegate = new EndOperationDelegate(this.OnEndgetBlock);
            }
            if ((this.ongetBlockCompletedDelegate == null)) {
                this.ongetBlockCompletedDelegate = new System.Threading.SendOrPostCallback(this.OngetBlockCompleted);
            }
            base.InvokeAsync(this.onBegingetBlockDelegate, new object[] {
                        in0}, this.onEndgetBlockDelegate, this.ongetBlockCompletedDelegate, userState);
        }
        
        public GeoDo.RSS.UI.AddIn.HdService.HdDataServer.FyImages[] getZCTformName(string in0) {
            return base.Channel.getZCTformName(in0);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BegingetZCTformName(string in0, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BegingetZCTformName(in0, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public GeoDo.RSS.UI.AddIn.HdService.HdDataServer.FyImages[] EndgetZCTformName(System.IAsyncResult result) {
            return base.Channel.EndgetZCTformName(result);
        }
        
        private System.IAsyncResult OnBegingetZCTformName(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string in0 = ((string)(inValues[0]));
            return this.BegingetZCTformName(in0, callback, asyncState);
        }
        
        private object[] OnEndgetZCTformName(System.IAsyncResult result) {
            GeoDo.RSS.UI.AddIn.HdService.HdDataServer.FyImages[] retVal = this.EndgetZCTformName(result);
            return new object[] {
                    retVal};
        }
        
        private void OngetZCTformNameCompleted(object state) {
            if ((this.getZCTformNameCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.getZCTformNameCompleted(this, new getZCTformNameCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void getZCTformNameAsync(string in0) {
            this.getZCTformNameAsync(in0, null);
        }
        
        public void getZCTformNameAsync(string in0, object userState) {
            if ((this.onBegingetZCTformNameDelegate == null)) {
                this.onBegingetZCTformNameDelegate = new BeginOperationDelegate(this.OnBegingetZCTformName);
            }
            if ((this.onEndgetZCTformNameDelegate == null)) {
                this.onEndgetZCTformNameDelegate = new EndOperationDelegate(this.OnEndgetZCTformName);
            }
            if ((this.ongetZCTformNameCompletedDelegate == null)) {
                this.ongetZCTformNameCompletedDelegate = new System.Threading.SendOrPostCallback(this.OngetZCTformNameCompleted);
            }
            base.InvokeAsync(this.onBegingetZCTformNameDelegate, new object[] {
                        in0}, this.onEndgetZCTformNameDelegate, this.ongetZCTformNameCompletedDelegate, userState);
        }
        
        public GeoDo.RSS.UI.AddIn.HdService.HdDataServer.FyImages[] getZCTformTime(string in0) {
            return base.Channel.getZCTformTime(in0);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BegingetZCTformTime(string in0, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BegingetZCTformTime(in0, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public GeoDo.RSS.UI.AddIn.HdService.HdDataServer.FyImages[] EndgetZCTformTime(System.IAsyncResult result) {
            return base.Channel.EndgetZCTformTime(result);
        }
        
        private System.IAsyncResult OnBegingetZCTformTime(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string in0 = ((string)(inValues[0]));
            return this.BegingetZCTformTime(in0, callback, asyncState);
        }
        
        private object[] OnEndgetZCTformTime(System.IAsyncResult result) {
            GeoDo.RSS.UI.AddIn.HdService.HdDataServer.FyImages[] retVal = this.EndgetZCTformTime(result);
            return new object[] {
                    retVal};
        }
        
        private void OngetZCTformTimeCompleted(object state) {
            if ((this.getZCTformTimeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.getZCTformTimeCompleted(this, new getZCTformTimeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void getZCTformTimeAsync(string in0) {
            this.getZCTformTimeAsync(in0, null);
        }
        
        public void getZCTformTimeAsync(string in0, object userState) {
            if ((this.onBegingetZCTformTimeDelegate == null)) {
                this.onBegingetZCTformTimeDelegate = new BeginOperationDelegate(this.OnBegingetZCTformTime);
            }
            if ((this.onEndgetZCTformTimeDelegate == null)) {
                this.onEndgetZCTformTimeDelegate = new EndOperationDelegate(this.OnEndgetZCTformTime);
            }
            if ((this.ongetZCTformTimeCompletedDelegate == null)) {
                this.ongetZCTformTimeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OngetZCTformTimeCompleted);
            }
            base.InvokeAsync(this.onBegingetZCTformTimeDelegate, new object[] {
                        in0}, this.onEndgetZCTformTimeDelegate, this.ongetZCTformTimeCompletedDelegate, userState);
        }
        
        public string getDataDir(GeoDo.RSS.UI.AddIn.HdService.HdDataServer.MonitorProductInfo in0) {
            return base.Channel.getDataDir(in0);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BegingetDataDir(GeoDo.RSS.UI.AddIn.HdService.HdDataServer.MonitorProductInfo in0, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BegingetDataDir(in0, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndgetDataDir(System.IAsyncResult result) {
            return base.Channel.EndgetDataDir(result);
        }
        
        private System.IAsyncResult OnBegingetDataDir(object[] inValues, System.AsyncCallback callback, object asyncState) {
            GeoDo.RSS.UI.AddIn.HdService.HdDataServer.MonitorProductInfo in0 = ((GeoDo.RSS.UI.AddIn.HdService.HdDataServer.MonitorProductInfo)(inValues[0]));
            return this.BegingetDataDir(in0, callback, asyncState);
        }
        
        private object[] OnEndgetDataDir(System.IAsyncResult result) {
            string retVal = this.EndgetDataDir(result);
            return new object[] {
                    retVal};
        }
        
        private void OngetDataDirCompleted(object state) {
            if ((this.getDataDirCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.getDataDirCompleted(this, new getDataDirCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void getDataDirAsync(GeoDo.RSS.UI.AddIn.HdService.HdDataServer.MonitorProductInfo in0) {
            this.getDataDirAsync(in0, null);
        }
        
        public void getDataDirAsync(GeoDo.RSS.UI.AddIn.HdService.HdDataServer.MonitorProductInfo in0, object userState) {
            if ((this.onBegingetDataDirDelegate == null)) {
                this.onBegingetDataDirDelegate = new BeginOperationDelegate(this.OnBegingetDataDir);
            }
            if ((this.onEndgetDataDirDelegate == null)) {
                this.onEndgetDataDirDelegate = new EndOperationDelegate(this.OnEndgetDataDir);
            }
            if ((this.ongetDataDirCompletedDelegate == null)) {
                this.ongetDataDirCompletedDelegate = new System.Threading.SendOrPostCallback(this.OngetDataDirCompleted);
            }
            base.InvokeAsync(this.onBegingetDataDirDelegate, new object[] {
                        in0}, this.onEndgetDataDirDelegate, this.ongetDataDirCompletedDelegate, userState);
        }
        
        public bool saveProductInfos(GeoDo.RSS.UI.AddIn.HdService.HdDataServer.MonitorProductInfo[] in0) {
            return base.Channel.saveProductInfos(in0);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginsaveProductInfos(GeoDo.RSS.UI.AddIn.HdService.HdDataServer.MonitorProductInfo[] in0, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginsaveProductInfos(in0, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndsaveProductInfos(System.IAsyncResult result) {
            return base.Channel.EndsaveProductInfos(result);
        }
        
        private System.IAsyncResult OnBeginsaveProductInfos(object[] inValues, System.AsyncCallback callback, object asyncState) {
            GeoDo.RSS.UI.AddIn.HdService.HdDataServer.MonitorProductInfo[] in0 = ((GeoDo.RSS.UI.AddIn.HdService.HdDataServer.MonitorProductInfo[])(inValues[0]));
            return this.BeginsaveProductInfos(in0, callback, asyncState);
        }
        
        private object[] OnEndsaveProductInfos(System.IAsyncResult result) {
            bool retVal = this.EndsaveProductInfos(result);
            return new object[] {
                    retVal};
        }
        
        private void OnsaveProductInfosCompleted(object state) {
            if ((this.saveProductInfosCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.saveProductInfosCompleted(this, new saveProductInfosCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void saveProductInfosAsync(GeoDo.RSS.UI.AddIn.HdService.HdDataServer.MonitorProductInfo[] in0) {
            this.saveProductInfosAsync(in0, null);
        }
        
        public void saveProductInfosAsync(GeoDo.RSS.UI.AddIn.HdService.HdDataServer.MonitorProductInfo[] in0, object userState) {
            if ((this.onBeginsaveProductInfosDelegate == null)) {
                this.onBeginsaveProductInfosDelegate = new BeginOperationDelegate(this.OnBeginsaveProductInfos);
            }
            if ((this.onEndsaveProductInfosDelegate == null)) {
                this.onEndsaveProductInfosDelegate = new EndOperationDelegate(this.OnEndsaveProductInfos);
            }
            if ((this.onsaveProductInfosCompletedDelegate == null)) {
                this.onsaveProductInfosCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnsaveProductInfosCompleted);
            }
            base.InvokeAsync(this.onBeginsaveProductInfosDelegate, new object[] {
                        in0}, this.onEndsaveProductInfosDelegate, this.onsaveProductInfosCompletedDelegate, userState);
        }
        
        public GeoDo.RSS.UI.AddIn.HdService.HdDataServer.ArrayOfString getTimeFromName(string in0) {
            return base.Channel.getTimeFromName(in0);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BegingetTimeFromName(string in0, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BegingetTimeFromName(in0, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public GeoDo.RSS.UI.AddIn.HdService.HdDataServer.ArrayOfString EndgetTimeFromName(System.IAsyncResult result) {
            return base.Channel.EndgetTimeFromName(result);
        }
        
        private System.IAsyncResult OnBegingetTimeFromName(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string in0 = ((string)(inValues[0]));
            return this.BegingetTimeFromName(in0, callback, asyncState);
        }
        
        private object[] OnEndgetTimeFromName(System.IAsyncResult result) {
            GeoDo.RSS.UI.AddIn.HdService.HdDataServer.ArrayOfString retVal = this.EndgetTimeFromName(result);
            return new object[] {
                    retVal};
        }
        
        private void OngetTimeFromNameCompleted(object state) {
            if ((this.getTimeFromNameCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.getTimeFromNameCompleted(this, new getTimeFromNameCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void getTimeFromNameAsync(string in0) {
            this.getTimeFromNameAsync(in0, null);
        }
        
        public void getTimeFromNameAsync(string in0, object userState) {
            if ((this.onBegingetTimeFromNameDelegate == null)) {
                this.onBegingetTimeFromNameDelegate = new BeginOperationDelegate(this.OnBegingetTimeFromName);
            }
            if ((this.onEndgetTimeFromNameDelegate == null)) {
                this.onEndgetTimeFromNameDelegate = new EndOperationDelegate(this.OnEndgetTimeFromName);
            }
            if ((this.ongetTimeFromNameCompletedDelegate == null)) {
                this.ongetTimeFromNameCompletedDelegate = new System.Threading.SendOrPostCallback(this.OngetTimeFromNameCompleted);
            }
            base.InvokeAsync(this.onBegingetTimeFromNameDelegate, new object[] {
                        in0}, this.onEndgetTimeFromNameDelegate, this.ongetTimeFromNameCompletedDelegate, userState);
        }
    }
}
