<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="contextMenuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btSearch.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABQAAAAUCAYAAACNiR0NAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAgY0hSTQAAeiYAAICEAAD6AAAAgOgAAHUwAADqYAAAOpgAABdwnLpRPAAAAAlwSFlzAAALDQAA
        Cw0B7QfALAAABEVJREFUOE+tlG1Mm1UUx/tCX6FPX6AdHfWxpYXSV+ha3gdrIQzZgCggxA6oDixQqBCg
        aycFzRD3YSFIAoN9wCyZ2T74wbhBFueSiR8W48sS/WA0mXPOxMUNIxmbLJs8x3MbaWpt/OSTnOfJc+85
        v3vu/5x72QDA+l8fAkw0hPO1WrrZ4/HsFwqF3OR58u/z+QzV1dVHMjIycv8VnwLYYrGYmZ6jr/xSVlpq
        SAUc6O/7tK21BeRy+QeYgOgfCSVlx0GHZQLs6jzya4HRaBMIBBKRSEThl0pPTydfQZ//1e8IUKFQfIX+
        dEqgRCLhVlZWeq1W602tVgt2u+2+0+FYysnJuWSxWFZzc3NXcaFLhXbbUo3HvVFc7AKj0fgQYxYyMzOp
        XWhMP3zYOp0uODQ09Hh+fp7p9/uhqfEwU1RYyKhUSrBaLYDzYDAYGI/7ANPd2cmExsZgcnISMGY7Ly8v
        QBgxFnlxOBwRZnYWJ5mZmRkgwOamRigqKgSlUgkmkwlomga9Xg+YHfi6uuDY+DhEIhECZFwu1/tcLlcS
        B6alpalx8Mbg4CBEo9EYsP5gHeTn5xPhwWw2g0ajgb1qdSzbhvp6GBwYgFBoHEhMRUXFLWTo4kA+n28v
        LS19EAgEYAy3UlJSAtnZ2UT0B2Kx+Fu1Wr2O4HXU+QZFUfdUKhVjs9mgp6cHSExVVdWf2EK1cSA6dZSX
        l8cmw+EwYA8SvQDHr6I2h9GK0Vxo1bjABdRzp6amBoaHh2MZYk+SnUzgPOkSFg+rdJoAg8EgYFGgt7cX
        nE4ng+MLpNHjFWSxuJjJG6jpk/b2dpiamoLR0VFwu91E6zU2my1k4YvC7V1raGiA6elpWFlZAT9qiMAd
        XPUUAtMSgBzsxVHUdpv4h8LHYW5+ESYmJgHb6hvU8VkWj8crMZnMt72+ARiJLsKbs+9Bh9eHfWh/KpPJ
        TiQDcctHNZpnHjr3N4H7pWk42LcM3aFlsLk8v2HPN7PwFdDYDz3Re+cgZ+wiaCeugLH9LaDzHY+lUmkY
        gfHzTHoNC9ipoPdtZbXOgvTYRyCNroM8eg32VAV2hGLpMEuQoVrUtUxA7YUvoPHKTWj6+AeoPXsd6LK2
        bSxKMBmIO3o+u7x7s3zuctyfxFhfOw1COR1hiWWad8r8J5m3v/4Rlu/+DmfubsKJz74H63P+RwjsI5VL
        PKt4CPR00aFb3qU1WLizEfNf/HkDHB2RR3wR+vMFon5tcdtW+NxV+PD2PVj9aQN6T55nChwH7qAcVbtH
        KqEwlGKPdq6s9fhW9PwnzOzlL5n21888VdL267jYPlJlEyXLOmeuePF+S+DUH90jc5vVdS98LlcoRhAm
        T3G9YRzHqN6riRQ4ai9qLe41pVr3Lh69OvRPJ33IRzPxePw2oZh6WULJvCh8GY5lJWeX2I84p0DLRTOg
        5aDF7sXd24Z0uPDvFUSJrZLqgv2vsb8A9RGIDLuaEq0AAAAASUVORK5CYII=
</value>
  </data>
</root>