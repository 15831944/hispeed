<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBoxRadControls.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        yx6GS/YAAAAASUVORK5CYII=
</value>
  </data>
</root>